(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    212065,       6319]
NotebookOptionsPosition[    192115,       5617]
NotebookOutlinePosition[    192521,       5634]
CellTagsIndexPosition[    192478,       5631]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Project Euler", "Title",
 CellChangeTimes->{{3.5183734702070413`*^9, 3.518373471736129*^9}}],

Cell[CellGroupData[{

Cell["Problem 1", "Section",
 CellChangeTimes->{{3.5183734916462674`*^9, 3.518373493282361*^9}, 
   3.5183735452503333`*^9}],

Cell["\<\
If we list all the natural numbers below 10 that are multiples of 3 or 5, we \
get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.\
\>", "Text",
 CellChangeTimes->{3.518373538301936*^9}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5715929011164317`*^9, 3.571592903060543*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Total", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "999"}], "]"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"#", ",", "3"}], "]"}], "\[Equal]", "0"}], "||", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"#", ",", "5"}], "]"}], "\[Equal]", "0"}]}], " ", "&"}]}], 
    "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5183735534108*^9, 3.5183735930510674`*^9}, {
  3.519534270465024*^9, 3.5195342736892085`*^9}, {3.5197815944887953`*^9, 
  3.5197815968069286`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.015000000000025937`", ",", "233168"}], "}"}]], "Output",
 CellChangeTimes->{
  3.5183735971963043`*^9, 3.5195342743402457`*^9, {3.519781569598372*^9, 
   3.5197815977919846`*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 2", "Section",
 CellChangeTimes->{{3.5183734970535765`*^9, 3.5183735009287987`*^9}}],

Cell[TextData[{
 "Each new term in the Fibonacci sequence is generated by adding the previous \
two terms. By starting with 1 and 2, the first 10 terms will be:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
   "1", ",", " ", "2", ",", " ", "3", ",", " ", "5", ",", " ", "8", ",", " ", 
    "13", ",", " ", "21", ",", " ", "34", ",", " ", "55", ",", " ", "89", ",",
     " ", "..."}], TraditionalForm]]],
 "\n\nBy considering the terms in the Fibonacci sequence whose values do not \
exceed four million, find the sum of the even-valued terms."
}], "Text",
 CellChangeTimes->{{3.5183735111213813`*^9, 3.5183735165736933`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5715939503324437`*^9, 3.5715939511394897`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Total", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Array", "[", 
      RowBox[{"Fibonacci", ",", " ", 
       RowBox[{"Catch", "[", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"j", " ", "=", " ", 
            RowBox[{"Fibonacci", "[", "i", "]"}]}], ";", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", "\[GreaterEqual]", " ", "4000000"}], ",", " ", 
             RowBox[{"Throw", "[", "i", "]"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "100"}], "}"}]}], "]"}], "]"}]}], "]"}], 
     ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"#", ",", "2"}], "]"}], "==", "0"}], " ", "&"}]}], "]"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.518374082826081*^9, 3.5183741275066366`*^9}, {
  3.5183741626676474`*^9, 3.5183741911932793`*^9}, {3.518374229122449*^9, 
  3.5183742800483613`*^9}, {3.5183745598233633`*^9, 3.518374598329566*^9}, {
  3.5195342799705677`*^9, 3.5195342845428295`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "4613732"}], "}"}]], "Output",
 CellChangeTimes->{{3.5183741059564037`*^9, 3.518374128842713*^9}, {
   3.5183741740753*^9, 3.5183741922123375`*^9}, {3.5183742637844315`*^9, 
   3.5183742801903696`*^9}, {3.518374564893654*^9, 3.518374600129669*^9}, 
   3.519534285747898*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 3", "Section",
 CellChangeTimes->{{3.518374631525465*^9, 3.5183746334705763`*^9}}],

Cell["\<\
The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ?\
\>", "Text",
 CellChangeTimes->{3.518374643885172*^9}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5715939503324437`*^9, 3.5715939511394897`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Max", "[", 
   RowBox[{"FactorInteger", "[", "600851475143", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5183747150762434`*^9, 3.518374717865403*^9}, {
  3.519534290095147*^9, 3.5195342929533105`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "6857"}], "}"}]], "Output",
 CellChangeTimes->{{3.518374693210993*^9, 3.518374718548442*^9}, 
   3.5195342935533447`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 4", "Section",
 CellChangeTimes->{{3.518374733094274*^9, 3.518374734030328*^9}, {
  3.519534327721299*^9, 3.5195343298284197`*^9}, {3.519693829970769*^9, 
  3.51969383173087*^9}}],

Cell["\<\
A palindromic number reads the same both ways. The largest palindrome made \
from the product of two 2-digit numbers is 9009 = 91  99.

Find the largest palindrome made from the product of two 3-digit numbers.\
\>", "Text",
 CellChangeTimes->{3.5183747484871545`*^9}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.519693823059374*^9, 3.5196938252915015`*^9}, 
   3.571615157038398*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "palindromes", "}"}], ",", " ", 
    RowBox[{
     RowBox[{"palindromes", " ", "=", " ", 
      RowBox[{"{", "}"}]}], " ", ";", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"x", "*", "y"}], "]"}], " ", "\[Equal]", " ", 
          RowBox[{"StringReverse", "[", 
           RowBox[{"ToString", "[", 
            RowBox[{"x", "*", "y"}], "]"}], "]"}]}], ",", " ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"palindromes", ",", " ", 
           RowBox[{"x", "*", "y"}]}], "]"}], ",", " ", "False"}], "]"}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "100", ",", " ", "999"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "100", ",", " ", "999"}], "}"}]}], "]"}], ";", 
     " ", 
     RowBox[{"Max", "[", "palindromes", "]"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5183890380865045`*^9, 3.5183890860462475`*^9}, {
  3.518389611263288*^9, 3.518389647612367*^9}, {3.518389706618742*^9, 
  3.5183897096019125`*^9}, {3.518389743484851*^9, 3.5183897538334427`*^9}, {
  3.518389795770841*^9, 3.518389826234584*^9}, {3.51838992389417*^9, 
  3.518389933427715*^9}, {3.518389991813054*^9, 3.518390058603874*^9}, {
  3.518390148961043*^9, 3.518390157343522*^9}, {3.5183901954247003`*^9, 
  3.51839025066986*^9}, {3.5183902919722223`*^9, 3.518390304964966*^9}, {
  3.518390357036944*^9, 3.5183903863886228`*^9}, {3.519534305673038*^9, 
  3.5195343102543*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9.126`", ",", "906609"}], "}"}]], "Output",
 CellChangeTimes->{{3.5183903697756724`*^9, 3.5183903976832685`*^9}, 
   3.519534320362878*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Optimized Solution", "Subsection",
 CellChangeTimes->{{3.5196938105006557`*^9, 3.5196938130438013`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "max", "}"}], ",", 
    RowBox[{
     RowBox[{"max", "=", "0"}], ";", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", " ", "y"}], ">", "max"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"x", " ", "y"}], "]"}], "\[Equal]", 
            RowBox[{"StringReverse", "[", 
             RowBox[{"ToString", "[", 
              RowBox[{"x", " ", "y"}], "]"}], "]"}]}], " ", ",", 
           RowBox[{"max", " ", "=", " ", 
            RowBox[{"x", " ", "y"}]}], ",", "Continue"}], "]"}], ",", 
         "Break"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "999", ",", "100", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "999", ",", "x", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "]"}], ";", "max"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.519691522564793*^9, 3.519691612504937*^9}, {
  3.519692203689751*^9, 3.51969221065615*^9}, {3.5196923437037597`*^9, 
  3.5196923558704557`*^9}, {3.51969246696981*^9, 3.5196924981205916`*^9}, {
  3.5196929909777813`*^9, 3.5196929931119037`*^9}, {3.5196933775788937`*^9, 
  3.519693390832652*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.4349999999999994`", ",", "906609"}], "}"}]], "Output",
 CellChangeTimes->{3.51969339359781*^9, 3.5196937992930145`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 5", "Section",
 CellChangeTimes->{{3.5183906132565985`*^9, 3.51839061572874*^9}}],

Cell["\<\
2520 is the smallest number that can be divided by each of the numbers from 1 \
to 10 without any remainder.

What is the smallest positive number that is evenly divisible by all of the \
numbers from 1 to 20?\
\>", "Text",
 CellChangeTimes->{3.5183906379740124`*^9}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.571595050013342*^9, 3.5715950518854485`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"LCM", "[", 
   RowBox[{
   "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
    ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", 
    "15", ",", "16", ",", "17", ",", "18", ",", "19", ",", "20"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5183916597594557`*^9, 3.5183916826627655`*^9}, {
  3.5195343408950524`*^9, 3.519534344010231*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "232792560"}], "}"}]], "Output",
 CellChangeTimes->{{3.518391667832917*^9, 3.518391684524872*^9}, 
   3.519534344659268*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 6", "Section",
 CellChangeTimes->{{3.518442800507539*^9, 3.518442803568714*^9}}],

Cell[TextData[{
 "The sum of the squares of the first ten natural numbers is,\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["1", "2"], " ", "+", " ", 
        SuperscriptBox["2", "2"], " ", "+"}], " ", "..."}], " ", "+", " ", 
      SuperscriptBox["10", "2"]}], " ", "=", " ", "385"}], "\n"}], 
   TraditionalForm]]],
 "\nThe square of the sum of the first ten natural numbers is,\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"1", " ", "+", " ", "2", " ", "+"}], " ", "..."}], " ", "+", 
        " ", "10"}], ")"}], "2"], " ", "=", " ", 
     RowBox[{"552", " ", "=", " ", "3025"}]}], "\n"}], TraditionalForm]]],
 "\nHence the difference between the sum of the squares of the first ten \
natural numbers and the square of the sum is 3025  385 = 2640.\n\nFind the \
difference between the sum of the squares of the first one hundred natural \
numbers and the square of the sum."
}], "Text",
 CellChangeTimes->{{3.5184428123302155`*^9, 3.5184428649162226`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.571595125675669*^9, 3.571595128148811*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "sumsq", "}"}], ",", " ", 
    RowBox[{
     RowBox[{"sumsq", "=", " ", "0"}], ";", " ", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"sumsq", "=", 
        RowBox[{"sumsq", "+", 
         RowBox[{"i", "^", "2"}]}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", "100"}], "}"}]}], "]"}], ";", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", "100"}], "]"}], "]"}], "^", "2"}], "-", 
      "sumsq"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5184428910817194`*^9, 3.518443139897951*^9}, {
  3.5184431724448123`*^9, 3.5184431751489673`*^9}, {3.519534350182584*^9, 
  3.5195343547898474`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "25164150"}], "}"}]], "Output",
 CellChangeTimes->{{3.518443133712597*^9, 3.518443140615992*^9}, 
   3.51844317590501*^9, 3.5195343561929274`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 7", "Section",
 CellChangeTimes->{{3.518443217388383*^9, 3.518443218979474*^9}}],

Cell["\<\
By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see \
that the 6th prime is 13.

What is the 10001st prime number?\
\>", "Text",
 CellChangeTimes->{3.518443231823209*^9}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.571595196004692*^9, 3.5715951989568605`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Prime", "[", "10001", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.518443241554765*^9, 3.51844325124932*^9}, {
  3.5195343669955454`*^9, 3.519534369909712*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "104743"}], "}"}]], "Output",
 CellChangeTimes->{{3.51844324723209*^9, 3.5184432518913565`*^9}, 
   3.519534370387739*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 8", "Section",
 CellChangeTimes->{{3.518443285082255*^9, 3.518443286698347*^9}, {
   3.519534413745219*^9, 3.5195344265489516`*^9}, 3.5196944900685244`*^9}],

Cell[TextData[{
 "Find the greatest product of five consecutive digits in the 1000-digit \
number.\n\n",
 Cell[BoxData[{
  FormBox[
  "73167176531330624919225119674426574742355349194934", 
   TraditionalForm], "\n", 
  FormBox[
  "96983520312774506326239578318016984801869478851843", 
   TraditionalForm], "\n", 
  FormBox[
  "85861560789112949495459501737958331952853208805511", 
   TraditionalForm], "\n", 
  FormBox[
  "12540698747158523863050715693290963295227443043557", 
   TraditionalForm], "\n", 
  FormBox[
  "66896648950445244523161731856403098711121722383113", 
   TraditionalForm], "\n", 
  FormBox[
  "62229893423380308135336276614282806444486645238749", 
   TraditionalForm], "\n", 
  FormBox[
  "30358907296290491560440772390713810515859307960866", 
   TraditionalForm], "\n", 
  FormBox[
  "70172427121883998797908792274921901699720888093776", 
   TraditionalForm], "\n", 
  FormBox[
  "65727333001053367881220235421809751254540594752243", 
   TraditionalForm], "\n", 
  FormBox[
  "52584907711670556013604839586446706324415722155397", 
   TraditionalForm], "\n", 
  FormBox[
  "53697817977846174064955149290862569321978468622482", 
   TraditionalForm], "\n", 
  FormBox[
  "83972241375657056057490261407972968652414535100474", 
   TraditionalForm], "\n", 
  FormBox[
  "82166370484403199890008895243450658541227588666881", 
   TraditionalForm], "\n", 
  FormBox[
  "16427171479924442928230863465674813919123162824586", 
   TraditionalForm], "\n", 
  FormBox[
  "17866458359124566529476545682848912883142607690042", 
   TraditionalForm], "\n", 
  FormBox[
  "24219022671055626321111109370544217506941658960408", 
   TraditionalForm], "\n", 
  FormBox[
  "07198403850962455444362981230987879927244284909188", 
   TraditionalForm], "\n", 
  FormBox[
  "84580156166097919133875499200524063689912560717606", 
   TraditionalForm], "\n", 
  FormBox[
  "05886116467109405077541002256983155200055935729725", 
   TraditionalForm], "\n", 
  FormBox[
  "71636269561882670428252483600823257530420752963450", TraditionalForm]}]]
}], "Text",
 CellChangeTimes->{{3.518443299288068*^9, 3.5184433268916464`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5196943546357784`*^9, 3.5196943569149084`*^9}, 
   3.571615164909848*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"number", ",", " ", "products"}], "}"}], ",", 
    RowBox[{
     RowBox[{"number", "=", 
      RowBox[{"IntegerDigits", "[", 
       FormBox[
        "731671765313306249192251196744265747423553491949349698352031277450632\
623957831801698480186947885184385861560789112949495459501737958331952853208805\
511125406987471585238630507156932909632952274430435576689664895044524452316173\
185640309871112172238311362229893423380308135336276614282806444486645238749303\
589072962904915604407723907138105158593079608667017242712188399879790879227492\
190169972088809377665727333001053367881220235421809751254540594752243525849077\
116705560136048395864467063244157221553975369781797784617406495514929086256932\
197846862248283972241375657056057490261407972968652414535100474821663704844031\
998900088952434506585412275886668811642717147992444292823086346567481391912316\
282458617866458359124566529476545682848912883142607690042242190226710556263211\
111093705442175069416589604080719840385096245544436298123098787992724428490918\
884580156166097919133875499200524063689912560717606058861164671094050775410022\
5698315520005593572972571636269561882670428252483600823257530420752963450",
        TraditionalForm], "]"}]}], ";", " ", 
     RowBox[{"products", "=", 
      RowBox[{"{", "0", "}"}]}], ";", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"products", ",", " ", 
         RowBox[{
          RowBox[{"number", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "*", 
          RowBox[{"number", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}], "*", 
          RowBox[{"number", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "2"}], "]"}], "]"}], "*", 
          RowBox[{"number", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "3"}], "]"}], "]"}], "*", 
          RowBox[{"number", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "4"}], "]"}], "]"}]}]}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", 
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"IntegerDigits", "[", "number", "]"}], "]"}], " ", "-", 
          "4"}]}], "}"}]}], "]"}], ";", "  ", 
     RowBox[{"Max", "[", "products", "]"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5184433379622793`*^9, 3.5184433498649607`*^9}, {
  3.5184437824087005`*^9, 3.518443805177003*^9}, {3.5184450802144313`*^9, 
  3.5184451724667077`*^9}, {3.5184460025811872`*^9, 3.5184460048963203`*^9}, {
  3.5195343761580696`*^9, 3.5195343814803743`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.04599999999999947`", ",", "40824"}], "}"}]], "Output",
 CellChangeTimes->{{3.518445110547166*^9, 3.5184451322244062`*^9}, {
   3.5184451740467978`*^9, 3.5184451792720966`*^9}, 3.5195343846475554`*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Revised/Optimized Solution", "Subsection",
 CellChangeTimes->{{3.519694365484399*^9, 3.5196943693796215`*^9}}],

Cell["\<\
Instead of using two variables (number, products) we only use 1 (number). \
Instead of Do/AppendTo we use Table and as a result can take the Max \
directly. It doesn\[CloseCurlyQuote]t cause much a difference in execution \
speed, but based on what I have read using Table is more efficient than the \
Do/AppendTo method.\
\>", "Text",
 CellChangeTimes->{{3.5196943769320536`*^9, 3.5196944648830843`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "number", "}"}], ",", 
    RowBox[{
     RowBox[{"number", "=", 
      RowBox[{"IntegerDigits", "[", 
       FormBox[
        "731671765313306249192251196744265747423553491949349698352031277450632\
623957831801698480186947885184385861560789112949495459501737958331952853208805\
511125406987471585238630507156932909632952274430435576689664895044524452316173\
185640309871112172238311362229893423380308135336276614282806444486645238749303\
589072962904915604407723907138105158593079608667017242712188399879790879227492\
190169972088809377665727333001053367881220235421809751254540594752243525849077\
116705560136048395864467063244157221553975369781797784617406495514929086256932\
197846862248283972241375657056057490261407972968652414535100474821663704844031\
998900088952434506585412275886668811642717147992444292823086346567481391912316\
282458617866458359124566529476545682848912883142607690042242190226710556263211\
111093705442175069416589604080719840385096245544436298123098787992724428490918\
884580156166097919133875499200524063689912560717606058861164671094050775410022\
5698315520005593572972571636269561882670428252483600823257530420752963450",
        TraditionalForm], "]"}]}], ";", 
     RowBox[{"Max", "[", 
      RowBox[{"Table", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"number", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "*", 
         RowBox[{"number", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}], "*", 
         RowBox[{"number", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "2"}], "]"}], "]"}], "*", 
         RowBox[{"number", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "3"}], "]"}], "]"}], "*", 
         RowBox[{"number", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "4"}], "]"}], "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "1", ",", " ", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"IntegerDigits", "[", "number", "]"}], "]"}], " ", "-", 
           "4"}]}], "}"}]}], "]"}], "]"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5196939760011215`*^9, 3.519694031669306*^9}, 
   3.5196943185157127`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "40824"}], "}"}]], "Output",
 CellChangeTimes->{3.519694033056385*^9, 3.5196943202508116`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 10", "Section",
 CellChangeTimes->{{3.518808761579357*^9, 3.518808771692935*^9}}],

Cell["\<\
The sum of the primes below 10 is 2 + 3 + 5 + 7 = 17.

Find the sum of all the primes below two million.\
\>", "Text",
 CellChangeTimes->{{3.5188088163004866`*^9, 3.5188088243279457`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5715955262605815`*^9, 3.5715955279886804`*^9}}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Primes less than 2000000", 
   Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Values", "Values", 1, 1, "Input", "Prime[Range[1, 148933]]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Global`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    
                    TemplateBox[{"\"primes\""}, "Row", 
                    DisplayFunction -> (#& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", #, "}"}], ",", "\" \""}], "]"}]& )], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    TemplateBox[{
                    StyleBox[
                    "\"less than \"", 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, 
                    GrayLevel[0.6], StripOnInput -> False], "2000000"}, "Row",
                     DisplayFunction -> (
                    RowBox[{#, "\[InvisibleSpace]", #2}]& ), 
                    InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], "]"}]& )]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {1, 1, 1}, "Rows" -> {{0.3}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               Global`TagBoxWrapper["Separator" -> " | "]], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output"]}], 
       XMLElement["dataformats", {}, {"plaintext"}]}]}], Global`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Values", "scanner" -> "SetTheory", "id" -> "Values", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Prime[Range[1, 148933]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{"2", 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    StyleBox["\" | \"", 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                  False], "3", 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    StyleBox["\" | \"", 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                  False], "5", 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    StyleBox["\" | \"", 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                  False], "7", 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    StyleBox["\" | \"", 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                  False], "11", 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    StyleBox["\" | \"", 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                  False], "13", 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    StyleBox["\" | \"", 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                  False], "17", 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    StyleBox["\" | \"", 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                  False], "19", 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    StyleBox["\" | \"", 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                  False], "23", 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    StyleBox["\" | \"", 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                  False], "29", 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    StyleBox["\" | \"", 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                  False], "31", 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    StyleBox["\" | \"", 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                  False], "37", 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    StyleBox["\" | \"", 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                  False], "41", 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    StyleBox["\" | \"", 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                  False], "43", 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    StyleBox["\" | \"", 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                  False], "47", 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    StyleBox["\" | \"", 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                  False], "53", 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    StyleBox["\" | \"", 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                  False], "59", 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    StyleBox["\" | \"", 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                  False], "61", 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    StyleBox["\" | \"", 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                  False], "67", 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    StyleBox["\" | \"", 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                  False], "71", 
                 StyleBox[
                  RowBox[{"\[NoBreak]", 
                    StyleBox["\" | \"", 
                    GrayLevel[0.6], StripOnInput -> False]}], AutoSpacing -> 
                  False], "\"\[Ellipsis]\""}], " ", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  
                  TemplateBox[{"148933", "\" primes\""}, "Row", 
                   DisplayFunction -> (RowBox[{#, " ", #2}]& ), 
                   InterpretationFunction -> (RowBox[{
                    StyleBox[
                    "Row", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", " "}], "]"}]& )], 
                  "\[NoBreak]", "\")\""}], 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
                GrayLevel[0.6], StripOnInput -> False]}], 
             LinebreakAdjustments -> {1, 10, 10000, 0, 100}, LineIndent -> 0],
             TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {"name" -> "More", "input" -> "Values__More"}, {}]}]}], 
   Global`aux1$$ = {True, False, {False}, False}, Global`aux2$$ = {
   True, False, {False}, False}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "2", "datatypes" -> 
    "", "timedout" -> "", "timing" -> "0.316", "parsetiming" -> "0.151", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP60619g71e8aga492fg300000e0cg2i02ba9844c&s=33", "related" -> 
    "http://www4d.wolframalpha.com/api/v2/relatedQueries.jsp?id=\
MSP60719g71e8aga492fg30000618f833bfefedeh5&s=33", "version" -> "2.1"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> -5., 
    "Date" -> {2011, 7, 4, 17, 52, 8.8604853`8.700032476736933}, "Line" -> 5, 
    "SessionID" -> 23060625293999489159}, Typeset`showpods$$ = {1, 2}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Values", "Values", 1, 1, "Input", "Prime[Range[1, 148933]]"}, 
   Typeset`open$$ = False, Typeset`newq$$ = "Primes less than 2000000"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Global`pod1$$, Global`pod2$$}, {Global`aux1$$, Global`aux2$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{198., {48., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Global`pod1$$, Global`pod2$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Total", "[", 
   RowBox[{"Prime", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", " ", "148933"}], "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5188086498839684`*^9, 3.5188086546842427`*^9}, {
  3.5195344373305683`*^9, 3.519534441151787*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.8580000000000001`", ",", "142913828922"}], "}"}]], "Output",
 CellChangeTimes->{3.518808791517069*^9, 3.519534442756879*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 12", "Section",
 CellChangeTimes->{{3.51881029861327*^9, 3.518810311001979*^9}}],

Cell[TextData[{
 "The sequence of triangle numbers is generated by adding the natural \
numbers. So the 7th triangle number would be ",
 StyleBox["1 + 2 + 3 + 4 + 5 + 6 + 7 = 28", "InlineFormula"],
 ". The first ten terms would be:\n\n",
 StyleBox["1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...", "Output"],
 "\n\nLet us list the factors of the first seven triangle numbers:\n\n ",
 StyleBox["1: 1\n 3: 1,3\n 6: 1,2,3,6\n10: 1,2,5,10\n15: 1,3,5,15\n21: \
1,3,7,21\n28: 1,2,4,7,14,28\n", "Output"],
 "\nWe can see that 28 is the first triangle number to have over five \
divisors.\n\nWhat is the value of the first triangle number to have over five \
hundred divisors?"
}], "Text",
 CellChangeTimes->{3.518810336781453*^9, 3.5188103808919764`*^9}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5715960689006186`*^9, 3.571596069851673*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "trianglenum", "}"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"trianglenum", "[", "n_", "]"}], " ", ":=", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{"k", ",", " ", 
        RowBox[{"{", 
         RowBox[{"k", ",", " ", "1", ",", " ", "n"}], "}"}]}], "]"}]}], ";", 
     " ", 
     RowBox[{"Catch", "[", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Divisors", "[", 
             RowBox[{"trianglenum", "[", "n", "]"}], "]"}], "]"}], ">", " ", 
           "500"}], ",", 
          RowBox[{"Throw", "[", 
           RowBox[{"trianglenum", "[", "n", "]"}], "]"}], ",", "Continue"}], 
         " ", "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"n", ",", " ", "1", ",", " ", "1000000000"}], "}"}]}], "]"}],
       "]"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.518809964866181*^9, 3.5188100809738216`*^9}, {
  3.518810143848418*^9, 3.518810144360447*^9}, {3.5188101855438027`*^9, 
  3.5188102239419994`*^9}, {3.518810272896799*^9, 3.51881028778065*^9}, {
  3.518810396714881*^9, 3.518810466680883*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.586999999999999`", ",", "76576500"}], "}"}]], "Output",
 CellChangeTimes->{
  3.5188101527249255`*^9, 3.51881018706489*^9, 3.51881023952089*^9, 
   3.518810304118585*^9, {3.5188104611095643`*^9, 3.5188104721081934`*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 13", "Section",
 CellChangeTimes->{{3.518810754497345*^9, 3.518810763749874*^9}}],

Cell[TextData[{
 "Work out the first ten digits of the sum of the following one-hundred \
50-digit numbers.\n\n",
 StyleBox["37107287533902102798797998220837590246510135740250\n\
46376937677490009712648124896970078050417018260538\n\
74324986199524741059474233309513058123726617309629\n\
91942213363574161572522430563301811072406154908250\n\
23067588207539346171171980310421047513778063246676\n\
89261670696623633820136378418383684178734361726757\n\
28112879812849979408065481931592621691275889832738\n\
44274228917432520321923589422876796487670272189318\n\
47451445736001306439091167216856844588711603153276\n\
70386486105843025439939619828917593665686757934951\n\
62176457141856560629502157223196586755079324193331\n\
64906352462741904929101432445813822663347944758178\n\
92575867718337217661963751590579239728245598838407\n\
58203565325359399008402633568948830189458628227828\n\
80181199384826282014278194139940567587151170094390\n\
35398664372827112653829987240784473053190104293586\n\
86515506006295864861532075273371959191420517255829\n\
71693888707715466499115593487603532921714970056938\n\
54370070576826684624621495650076471787294438377604\n\
53282654108756828443191190634694037855217779295145\n\
36123272525000296071075082563815656710885258350721\n\
45876576172410976447339110607218265236877223636045\n\
17423706905851860660448207621209813287860733969412\n\
81142660418086830619328460811191061556940512689692\n\
51934325451728388641918047049293215058642563049483\n\
62467221648435076201727918039944693004732956340691\n\
15732444386908125794514089057706229429197107928209\n\
55037687525678773091862540744969844508330393682126\n\
18336384825330154686196124348767681297534375946515\n\
80386287592878490201521685554828717201219257766954\n\
78182833757993103614740356856449095527097864797581\n\
16726320100436897842553539920931837441497806860984\n\
48403098129077791799088218795327364475675590848030\n\
87086987551392711854517078544161852424320693150332\n\
59959406895756536782107074926966537676326235447210\n\
69793950679652694742597709739166693763042633987085\n\
41052684708299085211399427365734116182760315001271\n\
65378607361501080857009149939512557028198746004375\n\
35829035317434717326932123578154982629742552737307\n\
94953759765105305946966067683156574377167401875275\n\
88902802571733229619176668713819931811048770190271\n\
25267680276078003013678680992525463401061632866526\n\
36270218540497705585629946580636237993140746255962\n\
24074486908231174977792365466257246923322810917141\n\
91430288197103288597806669760892938638285025333403\n\
34413065578016127815921815005561868836468420090470\n\
23053081172816430487623791969842487255036638784583\n\
11487696932154902810424020138335124462181441773470\n\
63783299490636259666498587618221225225512486764533\n\
67720186971698544312419572409913959008952310058822\n\
95548255300263520781532296796249481641953868218774\n\
76085327132285723110424803456124867697064507995236\n\
37774242535411291684276865538926205024910326572967\n\
23701913275725675285653248258265463092207058596522\n\
29798860272258331913126375147341994889534765745501\n\
18495701454879288984856827726077713721403798879715\n\
38298203783031473527721580348144513491373226651381\n\
34829543829199918180278916522431027392251122869539\n\
40957953066405232632538044100059654939159879593635\n\
29746152185502371307642255121183693803580388584903\n\
41698116222072977186158236678424689157993532961922\n\
62467957194401269043877107275048102390895523597457\n\
23189706772547915061505504953922979530901129967519\n\
86188088225875314529584099251203829009407770775672\n\
11306739708304724483816533873502340845647058077308\n\
82959174767140363198008187129011875491310547126581\n\
97623331044818386269515456334926366572897563400500\n\
42846280183517070527831839425882145521227251250327\n\
55121603546981200581762165212827652751691296897789\n\
32238195734329339946437501907836945765883352399886\n\
75506164965184775180738168837861091527357929701337\n\
62177842752192623401942399639168044983993173312731\n\
32924185707147349566916674687634660915035914677504\n\
99518671430235219628894890102423325116913619626622\n\
73267460800591547471830798392868535206946944540724\n\
76841822524674417161514036427982273348055556214818\n\
97142617910342598647204516893989422179826088076852\n\
87783646182799346313767754307809363333018982642090\n\
10848802521674670883215120185883543223812876952786\n\
71329612474782464538636993009049310363619763878039\n\
62184073572399794223406235393808339651327408011116\n\
66627891981488087797941876876144230030984490851411\n\
60661826293682836764744779239180335110989069790714\n\
85786944089552990653640447425576083659976645795096\n\
66024396409905389607120198219976047599490197230297\n\
64913982680032973156037120041377903785566085089252\n\
16730939319872750275468906903707539413042652315011\n\
94809377245048795150954100921645863754710598436791\n\
78639167021187492431995700641917969777599028300699\n\
15368713711936614952811305876380278410754449733078\n\
40789923115535562561142322423255033685442488917353\n\
44889911501440648020369068063960672322193204149535\n\
41503128880339536053299340368006977710650566631954\n\
81234880673210146739058568557934581403627822703280\n\
82616570773948327592232845941706525094512325230608\n\
22918802058777319719839450180888072429661980811197\n\
77158542502016545090413245809786882778948721859617\n\
72107838435069186155435662884062257473692284509516\n\
20849603980134001723930671666823555245252804609722\n\
53503534226472524250874054075591789781264330331690", "Input"]
}], "Text",
 CellChangeTimes->{3.5188110704124146`*^9}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5715963416612196`*^9, 3.5715963441733637`*^9}, 
   3.571596451789519*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"FromDigits", "[", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"IntegerDigits", "[", 
      RowBox[{"Total", "[", 
       RowBox[{"{", 
        RowBox[{
        "37107287533902102798797998220837590246510135740250", ",", "\n", 
         "46376937677490009712648124896970078050417018260538", ",", "\n", 
         "74324986199524741059474233309513058123726617309629", ",", "\n", 
         "91942213363574161572522430563301811072406154908250", ",", "\n", 
         "23067588207539346171171980310421047513778063246676", ",", "\n", 
         "89261670696623633820136378418383684178734361726757", ",", "\n", 
         "28112879812849979408065481931592621691275889832738", ",", "\n", 
         "44274228917432520321923589422876796487670272189318", ",", "\n", 
         "47451445736001306439091167216856844588711603153276", ",", "\n", 
         "70386486105843025439939619828917593665686757934951", ",", "\n", 
         "62176457141856560629502157223196586755079324193331", ",", "\n", 
         "64906352462741904929101432445813822663347944758178", ",", "\n", 
         "92575867718337217661963751590579239728245598838407", ",", "\n", 
         "58203565325359399008402633568948830189458628227828", ",", "\n", 
         "80181199384826282014278194139940567587151170094390", ",", "\n", 
         "35398664372827112653829987240784473053190104293586", ",", "\n", 
         "86515506006295864861532075273371959191420517255829", ",", "\n", 
         "71693888707715466499115593487603532921714970056938", ",", "\n", 
         "54370070576826684624621495650076471787294438377604", ",", "\n", 
         "53282654108756828443191190634694037855217779295145", ",", "\n", 
         "36123272525000296071075082563815656710885258350721", ",", "\n", 
         "45876576172410976447339110607218265236877223636045", ",", "\n", 
         "17423706905851860660448207621209813287860733969412", ",", "\n", 
         "81142660418086830619328460811191061556940512689692", ",", "\n", 
         "51934325451728388641918047049293215058642563049483", ",", "\n", 
         "62467221648435076201727918039944693004732956340691", ",", "\n", 
         "15732444386908125794514089057706229429197107928209", ",", "\n", 
         "55037687525678773091862540744969844508330393682126", ",", "\n", 
         "18336384825330154686196124348767681297534375946515", ",", "\n", 
         "80386287592878490201521685554828717201219257766954", ",", "\n", 
         "78182833757993103614740356856449095527097864797581", ",", "\n", 
         "16726320100436897842553539920931837441497806860984", ",", "\n", 
         "48403098129077791799088218795327364475675590848030", ",", "\n", 
         "87086987551392711854517078544161852424320693150332", ",", "\n", 
         "59959406895756536782107074926966537676326235447210", ",", "\n", 
         "69793950679652694742597709739166693763042633987085", ",", "\n", 
         "41052684708299085211399427365734116182760315001271", ",", "\n", 
         "65378607361501080857009149939512557028198746004375", ",", "\n", 
         "35829035317434717326932123578154982629742552737307", ",", "\n", 
         "94953759765105305946966067683156574377167401875275", ",", "\n", 
         "88902802571733229619176668713819931811048770190271", ",", "\n", 
         "25267680276078003013678680992525463401061632866526", ",", "\n", 
         "36270218540497705585629946580636237993140746255962", ",", "\n", 
         "24074486908231174977792365466257246923322810917141", ",", "\n", 
         "91430288197103288597806669760892938638285025333403", ",", "\n", 
         "34413065578016127815921815005561868836468420090470", ",", "\n", 
         "23053081172816430487623791969842487255036638784583", ",", "\n", 
         "11487696932154902810424020138335124462181441773470", ",", "\n", 
         "63783299490636259666498587618221225225512486764533", ",", "\n", 
         "67720186971698544312419572409913959008952310058822", ",", "\n", 
         "95548255300263520781532296796249481641953868218774", ",", "\n", 
         "76085327132285723110424803456124867697064507995236", ",", "\n", 
         "37774242535411291684276865538926205024910326572967", ",", "\n", 
         "23701913275725675285653248258265463092207058596522", ",", "\n", 
         "29798860272258331913126375147341994889534765745501", ",", "\n", 
         "18495701454879288984856827726077713721403798879715", ",", "\n", 
         "38298203783031473527721580348144513491373226651381", ",", "\n", 
         "34829543829199918180278916522431027392251122869539", ",", "\n", 
         "40957953066405232632538044100059654939159879593635", ",", "\n", 
         "29746152185502371307642255121183693803580388584903", ",", "\n", 
         "41698116222072977186158236678424689157993532961922", ",", "\n", 
         "62467957194401269043877107275048102390895523597457", ",", "\n", 
         "23189706772547915061505504953922979530901129967519", ",", "\n", 
         "86188088225875314529584099251203829009407770775672", ",", "\n", 
         "11306739708304724483816533873502340845647058077308", ",", "\n", 
         "82959174767140363198008187129011875491310547126581", ",", "\n", 
         "97623331044818386269515456334926366572897563400500", ",", "\n", 
         "42846280183517070527831839425882145521227251250327", ",", "\n", 
         "55121603546981200581762165212827652751691296897789", ",", "\n", 
         "32238195734329339946437501907836945765883352399886", ",", "\n", 
         "75506164965184775180738168837861091527357929701337", ",", "\n", 
         "62177842752192623401942399639168044983993173312731", ",", "\n", 
         "32924185707147349566916674687634660915035914677504", ",", "\n", 
         "99518671430235219628894890102423325116913619626622", ",", "\n", 
         "73267460800591547471830798392868535206946944540724", ",", "\n", 
         "76841822524674417161514036427982273348055556214818", ",", "\n", 
         "97142617910342598647204516893989422179826088076852", ",", "\n", 
         "87783646182799346313767754307809363333018982642090", ",", "\n", 
         "10848802521674670883215120185883543223812876952786", ",", "\n", 
         "71329612474782464538636993009049310363619763878039", ",", "\n", 
         "62184073572399794223406235393808339651327408011116", ",", "\n", 
         "66627891981488087797941876876144230030984490851411", ",", "\n", 
         "60661826293682836764744779239180335110989069790714", ",", "\n", 
         "85786944089552990653640447425576083659976645795096", ",", "\n", 
         "66024396409905389607120198219976047599490197230297", ",", "\n", 
         "64913982680032973156037120041377903785566085089252", ",", "\n", 
         "16730939319872750275468906903707539413042652315011", ",", "\n", 
         "94809377245048795150954100921645863754710598436791", ",", "\n", 
         "78639167021187492431995700641917969777599028300699", ",", "\n", 
         "15368713711936614952811305876380278410754449733078", ",", "\n", 
         "40789923115535562561142322423255033685442488917353", ",", "\n", 
         "44889911501440648020369068063960672322193204149535", ",", "\n", 
         "41503128880339536053299340368006977710650566631954", ",", "\n", 
         "81234880673210146739058568557934581403627822703280", ",", "\n", 
         "82616570773948327592232845941706525094512325230608", ",", "\n", 
         "22918802058777319719839450180888072429661980811197", ",", "\n", 
         "77158542502016545090413245809786882778948721859617", ",", "\n", 
         "72107838435069186155435662884062257473692284509516", ",", "\n", 
         "20849603980134001723930671666823555245252804609722", ",", "\n", 
         "53503534226472524250874054075591789781264330331690"}], "}"}], "]"}],
       "]"}], ",", "10"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.518811201479911*^9, 3.518811211060459*^9}, {
   3.5191599156637473`*^9, 3.519159952010826*^9}, 3.571596451793519*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "5537376230"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.519159934628832*^9, 3.519159952736868*^9}, 
   3.571596451794519*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 14", "Section",
 CellChangeTimes->{{3.51881172421981*^9, 3.5188117271659784`*^9}, {
   3.518885445184355*^9, 3.518885448316534*^9}, {3.519565639454691*^9, 
   3.51956564065976*^9}, 3.571596759917143*^9}],

Cell[TextData[{
 "The following iterative sequence is defined for the set of positive \
integers:\n\n",
 StyleBox["n ", "InlineFormula"],
 "\[Rule]",
 StyleBox["  n/2 (n is even)\nn ", "InlineFormula"],
 "\[Rule]",
 StyleBox["  3n + 1 (n is odd)", "InlineFormula"],
 "\n\nUsing the rule above and starting with 13, we generate the following \
sequence:\n\n",
 StyleBox["13 ", "Output"],
 "\[Rule]",
 StyleBox[" 40 ", "Output"],
 "\[Rule]",
 StyleBox[" 20 ", "Output"],
 "\[Rule]",
 StyleBox[" 10 ", "Output"],
 "\[Rule]",
 StyleBox[" 5 ", "Output"],
 "\[Rule]",
 StyleBox[" 16 ", "Output"],
 "\[Rule]",
 StyleBox[" 8 ", "Output"],
 "\[Rule]",
 StyleBox[" 4 ", "Output"],
 "\[Rule]",
 StyleBox[" 2 ", "Output"],
 "\[Rule]",
 StyleBox[" 1\n", "Output"],
 "\nIt can be seen that this sequence (starting at 13 and finishing at 1) \
contains 10 terms. Although it has not been proved yet (Collatz Problem), it \
is thought that all starting numbers finish at 1.\n\nWhich starting number, \
under one million, produces the longest chain?\n\nNOTE: Once the chain starts \
the terms are allowed to go above one million."
}], "Text",
 CellChangeTimes->{{3.518811735478454*^9, 3.518811804710414*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.571596584005081*^9, 3.571596584900132*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"lengths", ",", "f"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "n_", "]"}], ":=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"EvenQ", "[", "n", "]"}], ",", 
        RowBox[{"n", "/", "2"}], ",", 
        RowBox[{
         RowBox[{"3", "n"}], "+", "1"}]}], "]"}]}], ";", 
     RowBox[{"lengths", " ", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"NestWhileList", "[", 
          RowBox[{"f", ",", "n", ",", 
           RowBox[{
            RowBox[{"#", ">", "1"}], "&"}]}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "1000000"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"Position", "[", 
      RowBox[{"lengths", ",", 
       RowBox[{"Max", "[", "lengths", "]"}]}], "]"}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5195642208505516`*^9, 3.519564338694292*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1101.57`", ",", 
   RowBox[{"{", 
    RowBox[{"{", "837799", "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5195654810436306`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 15", "Section",
 CellChangeTimes->{{3.5192163061630993`*^9, 3.5192163078771973`*^9}}],

Cell["\<\
Starting in the top left corner of a 22 grid, there are 6 routes (without \
backtracking) to the bottom right corner.

How many routes are there through a 20x20 grid?\
\>", "Text",
 CellChangeTimes->{{3.5192163199548883`*^9, 3.5192163376218987`*^9}, {
  3.5715970028320365`*^9, 3.5715970190839663`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.571596926940696*^9, 3.571596927900751*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Binomial", "[", 
   RowBox[{"40", ",", "20"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.519216091953847*^9, 3.5192161105409107`*^9}, {
  3.519216179715867*^9, 3.5192162347660155`*^9}, {3.5195344970419836`*^9, 
  3.519534500453179*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "137846528820"}], "}"}]], "Output",
 CellChangeTimes->{{3.519216098936247*^9, 3.519216111008937*^9}, {
   3.51921618273804*^9, 3.5192162352800455`*^9}, 3.5195345014342346`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 16", "Section",
 CellChangeTimes->{{3.5188854296744676`*^9, 3.51888544404829*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "15"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " = 32768 and the sum of its digits is 3 + 2 + 7 + 6 + 8 = 26.\n\nWhat is \
the sum of the digits of the number ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "1000"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "?"
}], "Text",
 CellChangeTimes->{{3.51888546852669*^9, 3.5188854918050213`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5715970650605955`*^9, 3.5715970666846886`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Total", "[", 
   RowBox[{"IntegerDigits", "[", 
    RowBox[{"Power", "[", 
     RowBox[{"2", ",", "1000"}], "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5188855003095074`*^9, 3.5188855162804213`*^9}, {
  3.5195345057474813`*^9, 3.5195345085676427`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "1366"}], "}"}]], "Output",
 CellChangeTimes->{3.518885517696502*^9, 3.519534509848716*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 19", "Section",
 CellChangeTimes->{{3.518887521932138*^9, 3.518887532005714*^9}}],

Cell[CellGroupData[{

Cell["\<\
You are given the following information, but you may prefer to do some \
research for yourself.\
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.5188875388521056`*^9, {3.5188875741131225`*^9, 3.5188876210158052`*^9}}],

Cell["1 Jan 1900 was a Monday.", "Item",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.518887575208185*^9, 3.5188876210158052`*^9}],

Cell["\<\
Thirty days has September,
April, June and November.
All the rest have thirty-one,
Saving February alone,
Which has twenty-eight, rain or shine.
And on leap years, twenty-nine.\
\>", "Item",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.5188875859137974`*^9, 3.5188876210158052`*^9}],

Cell["\<\
A leap year occurs on any year evenly divisible by 4, but not on a century \
unless it is divisible by 400.\
\>", "Item",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.518887596340394*^9, 3.518887621016805*^9}}],

Cell["\<\
How many Sundays fell on the first of the month during the twentieth century \
(1 Jan 1901 to 31 Dec 2000)?\
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.518887614172414*^9, 3.518887621016805*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.57159799927703*^9, 3.5715980025162153`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "count", "}"}], ",", 
    RowBox[{
     RowBox[{"count", " ", "=", " ", "0"}], ";", 
     RowBox[{"Do", "[", " ", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"DateString", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"year", ",", " ", "month", ",", " ", "1"}], "}"}], ",", 
            " ", "\"\<DayName\>\""}], "]"}], " ", "\[Equal]", " ", 
          "\"\<Sunday\>\""}], ",", " ", 
         RowBox[{
          RowBox[{"count", "++"}], ";"}], ",", " ", "Continue"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"year", ",", " ", "1901", ",", " ", "2000"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"month", ",", " ", "1", ",", "12"}], "}"}]}], "]"}], ";", " ",
      "count"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5195345264596663`*^9, 3.5195345305018973`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5460000000000005`", ",", "171"}], "}"}]], "Output",
 CellChangeTimes->{3.518887656314824*^9, 3.5195345350731587`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 20", "Section",
 CellChangeTimes->{{3.518887735357345*^9, 3.518887736590416*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "!"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " means ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"n", "+", 
      RowBox[{"(", 
       RowBox[{"n", "+", "1"}], ")"}], "+"}], "..."}], "+", "3", "+", "2", 
    "+", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nFor example, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"10", "!"}], " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"10", "+", "9", "+"}], "..."}], "+", "3", "+", "2", "+", "1"}],
      "=", "3628800"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and the sum of the digits in the number ",
 Cell[BoxData[
  FormBox[
   RowBox[{"10", "!"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"3", "+", "6", "+", "2", "+", "8", "+", "8", "+", "0", "+", "0"}],
     "=", "27"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nFind the sum of the digits in the number ",
 Cell[BoxData[
  FormBox[
   RowBox[{"100", "!"}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.518887742155734*^9, 3.5188878849168997`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5715980601095095`*^9, 3.571598061148569*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Total", "[", 
   RowBox[{"IntegerDigits", "[", 
    RowBox[{"Factorial", "[", "100", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5188878892001443`*^9, 3.518887946587427*^9}, {
  3.519534542909607*^9, 3.519534545920779*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "648"}], "}"}]], "Output",
 CellChangeTimes->{{3.5188879202249193`*^9, 3.518887947380472*^9}, 
   3.5195345474998693`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 21", "Section",
 CellChangeTimes->{{3.518889407500986*^9, 3.5188894091330795`*^9}, {
   3.5195345602015963`*^9, 3.519534566860977*^9}, {3.5195346205380473`*^9, 
   3.5195346216631117`*^9}, 3.5197043078530693`*^9}],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"d", "(", "n", ")"}], TraditionalForm]]],
 " be defined as the sum of proper divisors of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " (numbers less than ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 " which divide evenly into ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 ").\nIf ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"d", "(", "a", ")"}], " ", "=", " ", "b"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"d", "(", "b", ")"}], "=", "a"}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "\[NotEqual]", " ", "b"}], TraditionalForm]]],
 ", then ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]]],
 " are an amicable pair and each of ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]]],
 " are called amicable numbers.\n\nFor example, the proper divisors of 220 \
are 1, 2, 4, 5, 10, 11, 20, 22, 44, 55 and 110; therefore ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"d", "(", "220", ")"}], "=", "284"}], TraditionalForm]]],
 ". The proper divisors of 284 are 1, 2, 4, 71 and 142; so ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"d", "(", "284", ")"}], "=", "220"}], TraditionalForm]]],
 ".\n\nEvaluate the sum of all the amicable numbers under 10000."
}], "Text",
 CellChangeTimes->{{3.5188894140303597`*^9, 3.51888952400565*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.51970422427829*^9, 3.5197042266524253`*^9}, 
   3.571615186006055*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"amicables", ",", "d"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"d", "[", "n_", "]"}], ":=", " ", 
      RowBox[{"Total", "[", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"Divisors", "[", "n", "]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"amicables", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"i", " ", "\[Equal]", " ", 
           RowBox[{"d", "[", 
            RowBox[{"d", "[", "i", "]"}], "]"}]}], " ", "&&", " ", 
          RowBox[{
           RowBox[{"d", "[", "i", "]"}], " ", "\[NotEqual]", " ", "i"}]}], 
         ",", " ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"amicables", ",", "i"}], "]"}], ",", " ", "Continue"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "10000"}], "}"}]}], "]"}], ";", 
     RowBox[{"Total", "[", "amicables", "]"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.519534584778002*^9, 3.5195345876231647`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Divisors", "::", "argx"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(Divisors\\)\[NoBreak] called with \
\[NoBreak]\\!\\(0\\)\[NoBreak] arguments; 1 argument is expected. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/argx\\\", \
ButtonNote -> \\\"Divisors::argx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.518889533011165*^9, 3.5195345939575267`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9510000000000003`", ",", "31626"}], "}"}]], "Output",
 CellChangeTimes->{3.5188895339042163`*^9, 3.5195345948785796`*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Revised/Optimized Solution", "Subsection",
 CellChangeTimes->{{3.5197042356219387`*^9, 3.5197042400611925`*^9}}],

Cell["\<\
Fixes the Divisors error by starting at 2 instead of 1, also uses Table \
instead of Do/AmendTo thus eliminating the need for the amicables variable.\
\>", "Text",
 CellChangeTimes->{{3.519704256573137*^9, 3.5197042933492403`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "d", "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"d", "[", "n_", "]"}], ":=", " ", 
      RowBox[{"Total", "[", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"Divisors", "[", "n", "]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"Total", "[", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"i", " ", "\[Equal]", " ", 
              RowBox[{"d", "[", 
               RowBox[{"d", "[", "i", "]"}], "]"}]}], " ", "&&", " ", 
             RowBox[{
              RowBox[{"d", "[", "i", "]"}], " ", "\[NotEqual]", " ", "i"}]}], 
            ",", " ", "i", ",", " ", "Null"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "2", ",", "10000"}], "}"}]}], "]"}], ",", 
        "Null"}], "]"}], "]"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.519702978950061*^9, 3.519702980629157*^9}, {
  3.519703209700259*^9, 3.5197032683996162`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7330000000000041`", ",", "31626"}], "}"}]], "Output",
 CellChangeTimes->{{3.5197032492945237`*^9, 3.5197032704307327`*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 22", "Section",
 CellChangeTimes->{{3.5188914949413815`*^9, 3.518891496004442*^9}}],

Cell["\<\
Using names.txt [http://projecteuler.net/project/names.txt] (right click and \
\[OpenCurlyQuote]Save Link/Target As...\[CloseCurlyQuote]), a 46K text file \
containing over five-thousand first names, begin by sorting it into \
alphabetical order. Then working out the alphabetical value for each name, \
multiply this value by its alphabetical position in the list to obtain a name \
score.

For example, when the list is sorted into alphabetical order, COLIN, which is \
worth 3 + 15 + 12 + 9 + 14 = 53, is the 938th name in the list. So, COLIN \
would obtain a score of 938 * 53 = 49714.

What is the total of all the name scores in the file?\
\>", "Text",
 CellChangeTimes->{{3.518891518142708*^9, 3.5188915369737854`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5715989536456165`*^9, 3.571598954508666*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"names", ",", "namescore"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"namescore", "[", 
       RowBox[{"name_", ",", "pos_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"ToCharacterCode", "[", "name", "]"}], " ", "-", " ", 
         RowBox[{"Subtract", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ToCharacterCode", "[", "\"\<A\>\"", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}]}], "]"}], 
       "pos"}]}], ";", 
     RowBox[{"names", " ", "=", " ", 
      RowBox[{"Sort", "[", 
       RowBox[{"StringSplit", "[", 
        RowBox[{
         RowBox[{"StringDrop", "[", 
          RowBox[{
           RowBox[{"StringDrop", "[", 
            RowBox[{
             RowBox[{
             "Import", "[", 
              "\"\<http://projecteuler.net/project/names.txt\>\"", "]"}], ",",
              "1"}], "]"}], ",", 
           RowBox[{"-", "1"}]}], "]"}], ",", "\"\<\\\",\\\"\>\""}], "]"}], 
       "]"}]}], ";", 
     RowBox[{"Total", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"namescore", "[", 
         RowBox[{
          RowBox[{"names", "[", 
           RowBox[{"[", "pos", "]"}], "]"}], ",", " ", "pos"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"pos", ",", " ", "1", ",", " ", 
          RowBox[{"Length", "[", "names", "]"}]}], "}"}]}], "]"}], "]"}]}]}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.518957053777132*^9, 3.518957067328907*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.3900000000000866`", ",", "871198282"}], "}"}]], "Output",
 CellChangeTimes->{3.51889154509925*^9, 3.5189570729982314`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 24", "Section",
 CellChangeTimes->{{3.5189007269344206`*^9, 3.518900728933535*^9}}],

Cell[TextData[{
 "A permutation is an ordered arrangement of objects. For example, 3124 is \
one possible permutation of the digits 1, 2, 3 and 4. If all of the \
permutations are listed numerically or alphabetically, we call it \
lexicographic order. The lexicographic permutations of 0, 1 and 2 are:\n\n",
 StyleBox["012   021   102   120   201   210", "Output"],
 "\n\nWhat is the millionth lexicographic permutation of the digits 0, 1, 2, \
3, 4, 5, 6, 7, 8 and 9?"
}], "Text",
 CellChangeTimes->{3.518900743148348*^9}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5716002212371187`*^9, 3.571600224453303*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"FromDigits", "[", 
   RowBox[{
    RowBox[{"Permutations", "[", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", 
       "7", ",", "8", ",", "9"}], "}"}], "]"}], "[", 
    RowBox[{"[", "1000000", "]"}], "]"}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.4049999999999998`", ",", "2783915460"}], "}"}]], "Output",
 CellChangeTimes->{3.518900733827815*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 25", "Section",
 CellChangeTimes->{{3.5189012495063105`*^9, 3.518901259725895*^9}}],

Cell["\<\
The Fibonacci sequence is defined by the recurrence relation:

Fn = Fn-1 + Fn-2, where F1 = 1 and F2 = 1.
Hence the first 12 terms will be:

F1 = 1
F2 = 1
F3 = 2
F4 = 3
F5 = 5
F6 = 8
F7 = 13
F8 = 21
F9 = 34
F10 = 55
F11 = 89
F12 = 144

The 12th term, F12, is the first term to contain three digits.

What is the first term in the Fibonacci sequence to contain 1000 digits?\
\>", "Text",
 CellChangeTimes->{{3.5189013147790437`*^9, 3.518901339576462*^9}, {
  3.5189017199362173`*^9, 3.5189017219813347`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.57160030063066*^9, 3.5716003059729652`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Catch", "[", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"IntegerDigits", "[", 
          RowBox[{"Fibonacci", "[", "i", "]"}], "]"}], "]"}], 
        "\[GreaterEqual]", " ", "1000"}], ",", " ", 
       RowBox[{"Throw", "[", "i", "]"}], ",", "Continue"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "10000"}], "}"}]}], "]"}], "]"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5779999999999996`", ",", "4782"}], "}"}]], "Output",
 CellChangeTimes->{3.518902198350581*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 26", "Section",
 CellChangeTimes->{{3.5195189369219956`*^9, 3.5195189418832793`*^9}}],

Cell["\<\
A unit fraction contains 1 in the numerator. The decimal representation of \
the unit fractions with denominators 2 to 10 are given:

1/2\t= \t0.5
1/3\t= \t0.(3)
1/4\t= \t0.25
1/5\t= \t0.2
1/6\t= \t0.1(6)
1/7\t= \t0.(142857)
1/8\t= \t0.125
1/9\t= \t0.(1)
1/10\t= \t0.1

Where 0.1(6) means 0.166666..., and has a 1-digit recurring cycle. It can be \
seen that 1/7 has a 6-digit recurring cycle.

Find the value of d  1000 for which 1/d contains the longest recurring cycle \
in its decimal fraction part.\
\>", "Text",
 CellChangeTimes->{{3.519518957159153*^9, 3.5195189607193565`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.571604257189962*^9, 3.5716042596211014`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Position", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{
        RowBox[{"RealDigits", "[", 
         RowBox[{"1", "/", "n"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "999"}], "}"}]}], "]"}], ",", 
    RowBox[{"Max", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{
         RowBox[{"RealDigits", "[", 
          RowBox[{"1", "/", "n"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "999"}], "}"}]}], "]"}], "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.519518141429496*^9, 3.5195182152687197`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.26600000000001023`", ",", 
   RowBox[{"{", 
    RowBox[{"{", "983", "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5195182222891207`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 27", "Section",
 CellChangeTimes->{{3.518905093855194*^9, 3.5189051028597097`*^9}, {
   3.519534691700117*^9, 3.5195346942882657`*^9}, 3.5197410078101873`*^9}],

Cell[TextData[{
 "Euler published the remarkable quadratic formula:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["n", "2"], "+", "n", "+", "41"}], TraditionalForm]]],
 "\n\nIt turns out that the formula will produce 40 primes for the \
consecutive values ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "0"}], TraditionalForm]]],
 " to 39. However, when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "40"}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["40", "2"], "+", "40", "+", "41"}], "=", 
    RowBox[{
     RowBox[{"40", 
      RowBox[{"(", 
       RowBox[{"40", "+", "1"}], ")"}]}], "+", "41"}]}], TraditionalForm]]],
 " is divisible by 41, and certainly when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "41"}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["n", "2"], "+", "41", "+", "41"}], TraditionalForm]]],
 " is clearly divisible by 41.\n\nUsing computers, the incredible formula ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["n", "2"], "-", 
    RowBox[{"79", "n"}], "+", "1601"}], TraditionalForm]]],
 " was discovered, which produces 80 primes for the consecutive values ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "0"}], TraditionalForm]]],
 " to 79. The product of the coefficients, 79 and 1601, is 126479.\n\n\
Considering quadratics of the form:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["n", "2"], "+", 
    RowBox[{"a", " ", "n"}], "+", "b", " "}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", "a", "|", 
    RowBox[{"<", " ", 
     RowBox[{"1000", " ", "and"}]}], " ", "|", "b", "|", 
    RowBox[{"<", " ", "1000"}]}], TraditionalForm]]],
 "\nwhere ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", "n", "|"}], TraditionalForm]]],
 " is the modulus/absolute value of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 "\ne.g. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"|", "11", "|"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"11", " ", "and"}], " ", "|", 
      RowBox[{"-", "4"}], "|"}], "=", "4"}]}], TraditionalForm]]],
 "|\n\nFind the product of the coefficients, ",
 Cell[BoxData[
  FormBox["a", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]]],
 ", for the quadratic expression that produces the maximum number of primes \
for consecutive values of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]]],
 ", starting with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "0"}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.5189051341695004`*^9, 3.518905459498108*^9}, {
  3.5197382313423824`*^9, 3.5197382319954195`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.519741014522571*^9, 3.5197410192088394`*^9}, 
   3.571615195453595*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"max", ",", "try", ",", "ans"}], "}"}], ",", 
    RowBox[{
     RowBox[{"max", " ", "=", " ", "0"}], ";", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"try", " ", "=", " ", 
         RowBox[{"Catch", "[", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"PrimeQ", "[", 
               RowBox[{
                RowBox[{"n", " ", "n"}], "+", 
                RowBox[{"a", " ", "n"}], "+", "b"}], " ", "]"}], ",", 
              "Continue", ",", 
              RowBox[{"Throw", "[", 
               RowBox[{"n", "-", "1"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "0", ",", "b"}], "}"}]}], "]"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"try", ">", "max"}], ",", 
          RowBox[{
           RowBox[{"max", " ", "=", " ", "try"}], ";", " ", 
           RowBox[{"ans", " ", "=", " ", 
            RowBox[{"a", " ", "b"}]}]}], ",", "Continue"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"-", "1000"}], ",", "1000"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", 
         RowBox[{"-", "1000"}], ",", "1000"}], "}"}]}], "]"}], ";", "ans"}]}],
    "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.518904304140025*^9, 3.518904423443849*^9}, {
   3.5189044576228037`*^9, 3.5189044762718706`*^9}, {3.5189045091117487`*^9, 
   3.5189045747235017`*^9}, {3.5189047839534693`*^9, 3.518904829833093*^9}, 
   3.5189048610248775`*^9, {3.5189050692917895`*^9, 3.5189050805884356`*^9}, {
   3.5189062301441865`*^9, 3.518906231915288*^9}, {3.518906305245482*^9, 
   3.5189063076196175`*^9}, {3.519534683105626*^9, 3.51953469996059*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"35.817`", ",", 
   RowBox[{"-", "59231"}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.5189062799200335`*^9, 3.518906293829829*^9}, 
   3.5189063457677994`*^9, 3.519534737419732*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Optimized Solution", "Subsection",
 CellChangeTimes->{{3.5197410259852266`*^9, 3.5197410289693975`*^9}}],

Cell["\<\
Compiling a function for calculating the polynomial provides a very small \
speed increase (less than 1 second), but the new numPrimes function provided \
a decent speed boost (~7 seconds). By far the most significant boost to \
efficiency was reducing the interval b is run on from -1000 to 1000 down to \
just the primes from 0 to 1000.\
\>", "Text",
 CellChangeTimes->{{3.5197410563129616`*^9, 3.5197411833292265`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"poly", ",", "numPrimes", ",", "max", ",", "ans"}], "}"}], ",", 
    RowBox[{
     RowBox[{"poly", "=", 
      RowBox[{"Compile", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "_Integer"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"b", ",", "_Integer"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "_Integer"}], "}"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"n", "^", "2"}], "+", 
         RowBox[{"a", " ", "n"}], "+", "b"}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"numPrimes", "[", 
       RowBox[{"a_", ",", "b_", ",", "n_"}], "]"}], ":=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"PrimeQ", "[", 
         RowBox[{"poly", "[", 
          RowBox[{"a", ",", "b", ",", "n"}], "]"}], "]"}], ",", 
        RowBox[{"numPrimes", "[", 
         RowBox[{"a", ",", "b", ",", 
          RowBox[{"n", "+", "1"}]}], "]"}], ",", "n"}], "]"}]}], ";", 
     RowBox[{"max", "=", "0"}], ";", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"numPrimes", "[", 
           RowBox[{"a", ",", "b", ",", "0"}], "]"}], ">", "max"}], ",", " ", 
         RowBox[{
          RowBox[{"max", "=", 
           RowBox[{"numPrimes", "[", 
            RowBox[{"a", ",", "b", ",", "0"}], "]"}]}], ";", 
          RowBox[{"ans", "=", 
           RowBox[{"a", " ", "b"}]}], ";"}], ",", "Continue"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"-", "1000"}], ",", "1000"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "1000"}], "]"}], ",", "PrimeQ"}], "]"}]}], 
        "}"}]}], "]"}], ";", "ans"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5197382636202283`*^9, 3.5197383545654306`*^9}, {
   3.519738390170467*^9, 3.5197384449966025`*^9}, 3.5197387041354246`*^9, {
   3.519739008515834*^9, 3.5197391006991067`*^9}, {3.5197397151122494`*^9, 
   3.519739734943383*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10.545999999999987`", ",", 
   RowBox[{"-", "59231"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5197391589474382`*^9, 3.519739746178026*^9, 
  3.519741059310133*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 29", "Section",
 CellChangeTimes->{{3.5189069423739233`*^9, 3.518906943709*^9}, {
   3.5195347652293234`*^9, 3.519534775294899*^9}, 3.519760418405655*^9}],

Cell[TextData[{
 "Consider all integer combinations of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["a", "b"], TraditionalForm]]],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "\[LessEqual]", "a", "\[LessEqual]", "5"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "\[LessEqual]", "b", "\[LessEqual]", "5"}], TraditionalForm]]],
 ":\n\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["2", "2"], "=", "4"}], ",", " ", 
    RowBox[{
     SuperscriptBox["2", "3"], "=", "8"}], ",", " ", 
    RowBox[{
     SuperscriptBox["2", "4"], "=", "16"}], ",", 
    RowBox[{
     SuperscriptBox["2", "5"], "=", "32"}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["3", "2"], "=", "9"}], ",", " ", 
    RowBox[{
     SuperscriptBox["3", "3"], "=", "27"}], ",", 
    RowBox[{
     SuperscriptBox["3", "4"], "=", "81"}], ",", 
    RowBox[{
     SuperscriptBox["3", "5"], "=", "243"}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["4", "2"], "=", "16"}], ",", 
    RowBox[{
     SuperscriptBox["4", "3"], "=", "64"}], ",", 
    RowBox[{
     SuperscriptBox["4", "4"], "=", "256"}], ",", 
    RowBox[{
     SuperscriptBox["4", "5"], "=", "1024"}]}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["5", "2"], "=", "25"}], ",", 
    RowBox[{
     SuperscriptBox["5", "3"], "=", "125"}], ",", 
    RowBox[{
     SuperscriptBox["5", "4"], "=", "625"}], ",", 
    RowBox[{
     SuperscriptBox["5", "5"], "=", "3125"}]}], TraditionalForm]}]],
 "\[LineSeparator]\nIf they are then placed in numerical order, with any \
repeats removed, we get the following sequence of 15 distinct terms:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
   "4", ",", "8", ",", "9", ",", "16", ",", "25", ",", "27", ",", "32", ",", 
    "64", ",", "81", ",", "125", ",", "243", ",", "256", ",", "625", ",", 
    "1024", ",", "3125"}], TraditionalForm]]],
 "\n\nHow many distinct terms are in the sequence generated by ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["a", "b"], TraditionalForm]]],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "\[LessEqual]", "a", "\[LessEqual]", 
    RowBox[{"100", " ", "and", " ", "2"}], "\[LessEqual]", "b", 
    "\[LessEqual]", "100"}], TraditionalForm]]],
 "?"
}], "Text",
 CellChangeTimes->{{3.5189069506273956`*^9, 3.5189072601761007`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.519760271963279*^9, 3.519760274354415*^9}, 
   3.571615200645892*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "combos", "}"}], ",", 
    RowBox[{
     RowBox[{"combos", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"combos", ",", 
         RowBox[{"Power", "[", 
          RowBox[{"a", ",", "b"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "2", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "2", ",", "100"}], "}"}]}], "]"}], ";", 
     RowBox[{"Length", "[", 
      RowBox[{"DeleteDuplicates", "[", "combos", "]"}], "]"}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5189067353010798`*^9, 3.518906910678111*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.0140000000000464`", ",", "9183"}], "}"}]], "Output",
 CellChangeTimes->{3.51890728498552*^9, 3.5197603105834875`*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Revised/Optimized Solution", "Subsection",
 CellChangeTimes->{{3.519760280469765*^9, 3.5197602849660225`*^9}}],

Cell["\<\
Revised to use Table instead of Do/AppendTo. Also able to eliminate the Block \
since we can perform the Length/DeleteDuplicates operations directly on the \
Table result. Parallelization doesn\[CloseCurlyQuote]t save any time, \
probably because of the time it takes to setup and the relatively small \
number of operations being performed.\
\>", "Text",
 CellChangeTimes->{{3.519760316723839*^9, 3.5197603920011444`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Length", "[", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Power", "[", 
        RowBox[{"a", ",", "b"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "2", ",", "100"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", "2", ",", "100"}], "}"}]}], "]"}], "]"}], "]"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.519759594940555*^9, 3.5197596382210307`*^9}, {
  3.5197596959663334`*^9, 3.519759697798438*^9}, {3.5197597576978645`*^9, 
  3.519759760267011*^9}, {3.519759857839592*^9, 3.5197598681161795`*^9}, {
  3.519759908991518*^9, 3.519759963941661*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.09399999999995595`", ",", "9183"}], "}"}]], "Output",
 CellChangeTimes->{
  3.519759640270148*^9, 3.5197597000315657`*^9, 3.519759760980052*^9, {
   3.5197598610507755`*^9, 3.5197598691532393`*^9}, {3.519759913445772*^9, 
   3.5197599205481787`*^9}, 3.519759965081726*^9, 3.5197600238100853`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 30", "Section",
 CellChangeTimes->{{3.518913212440551*^9, 3.518913219629962*^9}, {
   3.5195348094038496`*^9, 3.5195348183003583`*^9}, 3.519743947227312*^9}],

Cell[TextData[{
 "Surprisingly there are only three numbers that can be written as the sum of \
fourth powers of their digits:\n\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{"1634", " ", "=", " ", 
    RowBox[{
     SuperscriptBox["1", "4"], "+", 
     SuperscriptBox["6", "4"], "+", 
     SuperscriptBox["3", "4"], "+", 
     SuperscriptBox["4", "4"]}]}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{"8208", " ", "=", " ", 
    RowBox[{
     SuperscriptBox["8", "4"], "+", 
     SuperscriptBox["2", "4"], "+", 
     SuperscriptBox["0", "4"], "+", 
     SuperscriptBox["8", "4"]}]}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{"9474", "=", 
    RowBox[{
     SuperscriptBox["9", "4"], "+", 
     SuperscriptBox["4", "4"], "+", 
     SuperscriptBox["7", "4"], "+", 
     SuperscriptBox["4", "4"]}]}], TraditionalForm]}]],
 "\nAs ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "=", 
    SuperscriptBox["1", "4"]}], TraditionalForm]]],
 " is not a sum it is not included.\n\nThe sum of these numbers is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1634", "+", "8208", "+", "9474"}], "=", "19316"}], 
   TraditionalForm]]],
 ".\n\nFind the sum of all the numbers that can be written as the sum of \
fifth powers of their digits."
}], "Text",
 CellChangeTimes->{{3.5189132368799486`*^9, 3.5189133626801443`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5197423518740635`*^9, 3.519742354513214*^9}, 
   3.5716152061902094`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "ans", "}"}], ",", 
    RowBox[{
     RowBox[{"ans", "=", "0"}], ";", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{"Power", "[", 
            RowBox[{
             RowBox[{"IntegerDigits", "[", "i", "]"}], ",", "5"}], "]"}], 
           "]"}], " ", "\[Equal]", " ", "i"}], ",", 
         RowBox[{"ans", " ", "=", " ", 
          RowBox[{"ans", "+", "i"}]}], ",", " ", "Continue"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "354294"}], "}"}]}], "]"}], ";", 
     "ans"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.518913055896597*^9, 3.518913196272626*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.292000000000022`", ",", "443840"}], "}"}]], "Output",
 CellChangeTimes->{{3.518913150781024*^9, 3.518913164852829*^9}, 
   3.5189132011669064`*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Revised/Optimized Solutions", "Subsection",
 CellChangeTimes->{{3.5197423636647377`*^9, 3.5197423681779957`*^9}, 
   3.519742798378602*^9}],

Cell["\<\
By switching from a Do loop to creating a Table I was able to Parallelize the \
code and dramatically decrease the time it takes to generate the correct \
answer.\
\>", "Text",
 CellChangeTimes->{{3.519742384313919*^9, 3.5197424530178485`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Total", "[", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{"Power", "[", 
            RowBox[{
             RowBox[{"IntegerDigits", "[", "i", "]"}], ",", "5"}], "]"}], 
           "]"}], " ", "\[Equal]", " ", "i"}], ",", "i", ",", " ", "Null"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "354294"}], "}"}]}], "]"}], ",", "Null"}],
     "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.518913055896597*^9, 3.518913196272626*^9}, {
  3.5197419676050844`*^9, 3.5197420034101324`*^9}, {3.519742061180436*^9, 
  3.519742062179494*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.48300000000053755`", ",", "443840"}], "}"}]], "Output",
 CellChangeTimes->{3.519742065937709*^9}]
}, Closed]],

Cell["\<\
By switching from Total/DeleteCases to Select/Range and Parallelizing the \
operation I was able to decrease processing time even more. I doubt it\
\[CloseCurlyQuote]s possible to speed this up much more.\
\>", "Text",
 CellChangeTimes->{{3.519742813801484*^9, 3.5197428594970975`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Total", "[", 
   RowBox[{"Parallelize", "[", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "354294"}], "]"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Total", "[", 
         RowBox[{"Power", "[", 
          RowBox[{
           RowBox[{"IntegerDigits", "[", "#", "]"}], ",", "5"}], "]"}], "]"}],
         "\[Equal]", "#"}], "&"}]}], "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5197426056225767`*^9, 3.519742671497345*^9}, {
  3.5197427174819746`*^9, 3.519742722321252*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.18699999999758893`", ",", "443840"}], "}"}]], "Output",
 CellChangeTimes->{{3.519742658441598*^9, 3.519742676877652*^9}, 
   3.51974272561044*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 31", "Section",
 CellChangeTimes->{{3.5283283953651385`*^9, 3.528328403062579*^9}}],

Cell["\<\
In England the currency is made up of pound, \[Sterling], and pence, p, and \
there are eight coins in general circulation : 

1 p, 2 p, 5 p, 10 p, 20 p, 50 p, \[Sterling]1 (100 p) and \[Sterling]2 (200 p).

It is possible to make \[Sterling]2 in the following way : 

1 \[Sterling]1 + 150 p + 220 p + 15 p + 12 p + 31 p

How many different ways can \[Sterling]2 be made using any number of coins?\
\>", "Text",
 CellChangeTimes->{{3.5283284580587244`*^9, 3.5283284897785387`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5716049661495123`*^9, 3.5716049670445633`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Length", "[", 
   RowBox[{"IntegerPartitions", "[", 
    RowBox[{"200", ",", "All", ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "2", ",", "5", ",", "10", ",", "20", ",", "50", ",", "100", 
       ",", "200"}], "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5283284181784434`*^9, 3.528328446469062*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.374999999999999`", ",", "73682"}], "}"}]], "Output",
 CellChangeTimes->{3.5283284500442657`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 32", "Section",
 CellChangeTimes->{{3.519421302641387*^9, 3.5194213038334556`*^9}}],

Cell["\<\
We shall say that an n-digit number is pandigital if it makes use of all the \
digits 1 to n exactly once; for example, the 5-digit number, 15234, is 1 \
through 5 pandigital.

The product 7254 is unusual, as the identity, 39 * 186 = 7254, containing \
multiplicand, multiplier, and product is 1 through 9 pandigital.

Find the sum of all products whose multiplicand/multiplier/product identity \
can be written as a 1 through 9 pandigital.

HINT: Some products can be obtained in more than one way so be sure to only \
include it once in your sum.\
\>", "Text",
 CellChangeTimes->{{3.5194213417066216`*^9, 3.519421350738138*^9}}],

Cell[CellGroupData[{

Cell["Function", "Subsection",
 CellChangeTimes->{{3.519421424921381*^9, 3.519421434944955*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pandigitalQ", "[", "num_Integer", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "numlist", "}"}], ",", 
    RowBox[{"Catch", "[", 
     RowBox[{
      RowBox[{"numList", "=", 
       RowBox[{"IntegerDigits", "[", "num", "]"}]}], ";", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{"numList", ",", "i"}], "]"}], "\[Equal]", "1"}], ",", 
          "Continue", ",", " ", 
          RowBox[{"Throw", "[", "False", "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"IntegerLength", "[", "num", "]"}]}], "}"}]}], "]"}], ";", 
      RowBox[{"Throw", "[", "True", "]"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5194102085728426`*^9, 3.519410238980582*^9}, {
  3.519410285046217*^9, 3.5194104297544937`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.519421398745884*^9, 3.5194214009130077`*^9}, 
   3.5716152149817123`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "trythese2", "}"}], ",", 
    RowBox[{
     RowBox[{"trythese2", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Plus", "[", 
           RowBox[{
            RowBox[{"IntegerLength", "[", "i", "]"}], ",", 
            RowBox[{"IntegerLength", "[", "j", "]"}], ",", 
            RowBox[{"IntegerLength", "[", 
             RowBox[{"i", " ", "j"}], "]"}]}], "]"}], ">", "9"}], ",", " ", 
         "Break", ",", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Count", "[", 
              RowBox[{
               RowBox[{"IntegerDigits", "[", 
                RowBox[{"i", " ", "j"}], "]"}], ",", "0"}], "]"}], "==", " ", 
             "0"}], "&&", " ", 
            RowBox[{
             RowBox[{"Plus", "[", 
              RowBox[{
               RowBox[{"IntegerLength", "[", "i", "]"}], ",", 
               RowBox[{"IntegerLength", "[", "j", "]"}], ",", 
               RowBox[{"IntegerLength", "[", 
                RowBox[{"i", " ", "j"}], "]"}]}], "]"}], "\[Equal]", "9"}], 
            " ", "&&", 
            RowBox[{"pandigitalQ", "[", 
             RowBox[{"FromDigits", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"IntegerDigits", "[", "i", "]"}], ",", 
                RowBox[{"IntegerDigits", "[", "j", "]"}], ",", 
                RowBox[{"IntegerDigits", "[", 
                 RowBox[{"i", " ", "j"}], "]"}]}], "]"}], "]"}], "]"}]}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"trythese2", ",", " ", 
             RowBox[{"{", 
              RowBox[{"i", ",", "j", ",", 
               RowBox[{"i", " ", "j"}]}], "}"}]}], "]"}], ",", "Continue"}], 
          "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "10000"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "10000"}], "}"}]}], "]"}], ";", 
     RowBox[{"Total", "[", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"i", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "trythese2"}], "}"}]}], "]"}], "]"}], "]"}]}]}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5194107475286694`*^9, 3.5194107845117846`*^9}, {
  3.5194108482744317`*^9, 3.5194109143062086`*^9}, {3.519410946483049*^9, 
  3.5194109479381323`*^9}, {3.5194110477938433`*^9, 3.5194111693737974`*^9}, {
  3.5194113024904113`*^9, 3.5194113659090385`*^9}, {3.5194129349647837`*^9, 
  3.5194129694227543`*^9}, {3.5194148724646025`*^9, 3.5194149354682055`*^9}, {
  3.5194151556197977`*^9, 3.5194151984642487`*^9}, {3.5194152345413117`*^9, 
  3.5194152348953323`*^9}, {3.519415268017226*^9, 3.5194152983619623`*^9}, {
  3.5194153578133626`*^9, 3.519415462016323*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"603.787`", ",", "45228"}], "}"}]], "Output",
 CellChangeTimes->{3.5194160758154297`*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Revised Solution", "Subsection",
 CellChangeTimes->{{3.5194214087134542`*^9, 3.519421410720569*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"trythese2", ",", "pandigitalQ"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"pandigitalQ", "[", "num_Integer", "]"}], ":=", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "numlist", "}"}], ",", 
        RowBox[{"Catch", "[", 
         RowBox[{
          RowBox[{"numList", "=", 
           RowBox[{"IntegerDigits", "[", "num", "]"}]}], ";", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Count", "[", 
                RowBox[{"numList", ",", "i"}], "]"}], "\[Equal]", "1"}], ",", 
              "Continue", ",", " ", 
              RowBox[{"Throw", "[", "False", "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"IntegerLength", "[", "num", "]"}]}], "}"}]}], "]"}], 
          ";", 
          RowBox[{"Throw", "[", "True", "]"}]}], "]"}]}], "]"}]}], ";", 
     RowBox[{"trythese2", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Plus", "[", 
           RowBox[{
            RowBox[{"IntegerLength", "[", "i", "]"}], ",", 
            RowBox[{"IntegerLength", "[", "j", "]"}], ",", 
            RowBox[{"IntegerLength", "[", 
             RowBox[{"i", " ", "j"}], "]"}]}], "]"}], ">", "9"}], ",", " ", 
         "Break", ",", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Count", "[", 
              RowBox[{
               RowBox[{"IntegerDigits", "[", 
                RowBox[{"i", " ", "j"}], "]"}], ",", "0"}], "]"}], "==", " ", 
             "0"}], "&&", " ", 
            RowBox[{
             RowBox[{"Plus", "[", 
              RowBox[{
               RowBox[{"IntegerLength", "[", "i", "]"}], ",", 
               RowBox[{"IntegerLength", "[", "j", "]"}], ",", 
               RowBox[{"IntegerLength", "[", 
                RowBox[{"i", " ", "j"}], "]"}]}], "]"}], "\[Equal]", "9"}], 
            " ", "&&", 
            RowBox[{"pandigitalQ", "[", 
             RowBox[{"FromDigits", "[", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"IntegerDigits", "[", "i", "]"}], ",", 
                RowBox[{"IntegerDigits", "[", "j", "]"}], ",", 
                RowBox[{"IntegerDigits", "[", 
                 RowBox[{"i", " ", "j"}], "]"}]}], "]"}], "]"}], "]"}]}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"trythese2", ",", " ", 
             RowBox[{"{", 
              RowBox[{"i", ",", "j", ",", 
               RowBox[{"i", " ", "j"}]}], "}"}]}], "]"}], ",", "Continue"}], 
          "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "9999"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "99"}], "}"}]}], "]"}], ";", 
     RowBox[{"Total", "[", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"i", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "trythese2"}], "}"}]}], "]"}], "]"}], "]"}]}]}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.519421062098629*^9, 3.5194211379839697`*^9}, {
  3.5194212065548916`*^9, 3.5194212122172155`*^9}, {3.5194213696662207`*^9, 
  3.519421380929865*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6.8489999999999815`", ",", "45228"}], "}"}]], "Output",
 CellChangeTimes->{{3.519421072027197*^9, 3.5194211451353784`*^9}, 
   3.5194212193746247`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 34", "Section",
 CellChangeTimes->{{3.518913827629738*^9, 3.5189138299098682`*^9}, {
  3.519534860619779*^9, 3.5195348651390376`*^9}, {3.5197613681649776`*^9, 
  3.5197613696070604`*^9}}],

Cell[TextData[{
 "145 is a curious number, as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"1", "!"}], "+", 
     RowBox[{"4", "!"}], "+", 
     RowBox[{"5", "!"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"1", "+", "24", "+", "120"}], "=", "145"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n\nFind the sum of all numbers which are equal to the sum of the factorial \
of their digits.\n\nNote : as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "!"}], " ", "=", " ", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", "!"}], " ", "=", "2"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " are not sums they are not included."
}], "Text",
 CellChangeTimes->{{3.5189138417355447`*^9, 3.5189139189409604`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.519760435737646*^9, 3.5197604396508694`*^9}, 
   3.571615221054059*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "ans", "}"}], ",", 
    RowBox[{
     RowBox[{"ans", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"Do", "[", " ", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{"Factorial", "[", 
            RowBox[{"IntegerDigits", "[", "i", "]"}], "]"}], "]"}], 
          "\[Equal]", "i"}], ",", " ", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"ans", ",", "i"}], "]"}], ",", "Continue"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "3", ",", "100000"}], "}"}]}], "]"}], ";", " ", 
     RowBox[{"Total", "[", "ans", "]"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.518913597118553*^9, 3.5189136982673388`*^9}, {
  3.518913729643133*^9, 3.518913800446183*^9}, {3.518913888416215*^9, 
  3.5189138885512223`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.4650000000000136`", ",", "40730"}], "}"}]], "Output",
 CellChangeTimes->{{3.5189136259522023`*^9, 3.51891363954698*^9}, 
   3.518913808126622*^9, {3.5189139291275434`*^9, 3.518913941359243*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Revised/Optimized Solution", "Subsection",
 CellChangeTimes->{{3.5197613615636*^9, 3.519761365684836*^9}}],

Cell["\<\
Table instead of Do/AppendTo. Parallelize spead things up by a factor of 10.\
\>", "Text",
 CellChangeTimes->{{3.5197613817447543`*^9, 3.5197614093023305`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Total", "[", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{"Factorial", "[", 
            RowBox[{"IntegerDigits", "[", "i", "]"}], "]"}], "]"}], 
          "\[Equal]", "i"}], ",", "i", ",", "Null"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "3", ",", "100000"}], "}"}]}], "]"}], ",", "Null"}],
     "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.519761042625358*^9, 3.51976112343198*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.2809999999994305`", ",", "40730"}], "}"}]], "Output",
 CellChangeTimes->{3.5197611259021215`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 35", "Section",
 CellChangeTimes->{{3.5189163257026196`*^9, 3.518916328317769*^9}}],

Cell["\<\
The number, 197, is called a circular prime because all rotations of the \
digits : 197, 971, and 719, are themselves prime.

There are thirteen such primes below 100 : 2, 3, 5, 7, 11, 13, 17, 31, 37, \
71, 73, 79, and 97.

How many circular primes are there below one million?\
\>", "Text",
 CellChangeTimes->{{3.518916384072958*^9, 3.5189163990558147`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5716056796133204`*^9, 3.571605680365363*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Length", "[", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"PrimeQ", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"FromDigits", "[", 
                  RowBox[{"RotateLeft", "[", 
                   RowBox[{
                    RowBox[{"IntegerDigits", "[", "n", "]"}], ",", "i"}], 
                   "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "0", ",", 
                   RowBox[{
                    RowBox[{"StringLength", "[", 
                    RowBox[{"ToString", "[", "n", "]"}], "]"}], "-", "1"}]}], 
                  "}"}]}], "]"}], "]"}], ",", "False"}], "]"}]}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"FromDigits", "[", 
              RowBox[{"RotateLeft", "[", 
               RowBox[{
                RowBox[{"IntegerDigits", "[", "n", "]"}], ",", "i"}], "]"}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "0", ",", 
               RowBox[{
                RowBox[{"StringLength", "[", 
                 RowBox[{"ToString", "[", "n", "]"}], "]"}], "-", "1"}]}], 
              "}"}]}], "]"}], ","}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"Prime", "[", 
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", "78498"}], "]"}], "]"}]}], "}"}]}], "]"}], ",",
        "Null"}], "]"}], "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5189155011804595`*^9, 3.518915502555538*^9}, {
  3.518915875060844*^9, 3.5189159096428223`*^9}, {3.5189160095175343`*^9, 
  3.5189160257104607`*^9}, {3.518916080958621*^9, 3.518916081573656*^9}, {
  3.5189161283843336`*^9, 3.5189162399307137`*^9}, {3.518916281905114*^9, 
  3.5189162882914796`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6.692999999999945`", ",", "55"}], "}"}]], "Output",
 CellChangeTimes->{{3.5189158956980247`*^9, 3.518915910230856*^9}, {
   3.5189160207411766`*^9, 3.5189160278255816`*^9}, {3.5189161380918884`*^9, 
   3.5189162070958357`*^9}, 3.5189162486312113`*^9, 3.518916295793909*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 36", "Section",
 CellChangeTimes->{{3.518917504855063*^9, 3.518917508007243*^9}}],

Cell[TextData[{
 "The decimal number, 585 = ",
 StyleBox[Cell[BoxData[
  TagBox[
   InterpretationBox[
    SubscriptBox["\<\"1001001001\"\>", "\<\"2\"\>"],
    585,
    Editable->False],
   BaseForm[#, 2]& ]], "Output",
  CellChangeTimes->{3.518917589284892*^9}], "Output"],
 StyleBox[" ", "Output"],
 "(binary), is palindromic in both bases.Find the sum of all numbers, less \
than one million, which are palindromic in base 10 and base 2.\n\n(Please \
note that the palindromic number, in either base, may not include leading \
zeros.)"
}], "Text",
 CellChangeTimes->{{3.518917554388896*^9, 3.51891756057125*^9}, {
  3.5189175968243237`*^9, 3.51891763190733*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.571610449749156*^9, 3.571610450797216*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Total", "[", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"IntegerString", "[", 
           RowBox[{"n", ",", "2"}], "]"}], "==", 
          RowBox[{"StringReverse", "[", 
           RowBox[{"IntegerString", "[", 
            RowBox[{"n", ",", "2"}], "]"}], "]"}]}], ",", "n", ",", "Null"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ToExpression", "[", 
                 RowBox[{"StringReverse", "[", 
                  RowBox[{"ToString", "[", "i", "]"}], "]"}], "]"}], "==", 
                "i"}], ",", " ", "i", ",", "Null"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "1000000"}], "}"}]}], "]"}], ",", 
           "Null"}], "]"}]}], "}"}]}], "]"}], ",", "Null"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5189167110926623`*^9, 3.5189167661298103`*^9}, {
  3.518916858180075*^9, 3.518916894534155*^9}, {3.518916939047701*^9, 
  3.5189169499063215`*^9}, {3.518917015119052*^9, 3.518917022991502*^9}, {
  3.5189170532312317`*^9, 3.518917105877243*^9}, {3.518917305196643*^9, 
  3.5189174085895567`*^9}, {3.5189174395473275`*^9, 3.518917462230625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"12.526999999999997`", ",", "872187"}], "}"}]], "Output",
 CellChangeTimes->{{3.5189168861876774`*^9, 3.5189168953001986`*^9}, 
   3.518916950713368*^9, 3.518917023381524*^9, {3.518917371108413*^9, 
   3.5189174090005803`*^9}, {3.5189174535861306`*^9, 3.518917476093418*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 37", "Section",
 CellChangeTimes->{{3.5189772538262157`*^9, 3.51897725548031*^9}}],

Cell["\<\
The number 3797 has an interesting property. Being prime itself, it is \
possible to continuously remove digits from left to right, and remain prime \
at each stage: 3797, 797, 97, and 7. Similarly we can work from right to \
left: 3797, 379, 37, and 3.

Find the sum of the only eleven primes that are both truncatable from left to \
right and right to left.

NOTE: 2, 3, 5, and 7 are not considered to be truncatable primes.\
\>", "Text",
 CellChangeTimes->{3.5189772795256853`*^9}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.57161052761361*^9, 3.571610528557664*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "primes", "}"}], ",", 
    RowBox[{
     RowBox[{"primes", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Count", "[", 
           RowBox[{
            RowBox[{"PrimeQ", "[", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"FromDigits", "[", 
                  RowBox[{"Take", "[", 
                   RowBox[{
                    RowBox[{"IntegerDigits", "[", "p", "]"}], ",", 
                    RowBox[{"-", "i"}]}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", 
                   RowBox[{"IntegerLength", "[", "p", "]"}]}], "}"}]}], "]"}],
                ",", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"FromDigits", "[", 
                  RowBox[{"Take", "[", 
                   RowBox[{
                    RowBox[{"IntegerDigits", "[", "p", "]"}], ",", "i"}], 
                   "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", 
                   RowBox[{"IntegerLength", "[", "p", "]"}]}], "}"}]}], 
                "]"}]}], "\[IndentingNewLine]", "]"}], "]"}], ",", "False"}], 
           "]"}], " ", "\[Equal]", " ", "0"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"primes", ",", "p"}], "]"}], ",", "Continue"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", 
         RowBox[{"Prime", "[", 
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", "100000"}], "]"}], "]"}]}], "}"}]}], "]"}], ";", 
     " ", 
     RowBox[{
      RowBox[{"Total", "[", "primes", "]"}], "-", 
      RowBox[{"Total", "[", 
       RowBox[{"Prime", "[", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", "4"}], "]"}], "]"}], "]"}]}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5189753698254566`*^9, 3.51897547985075*^9}, {
  3.5189756023547564`*^9, 3.5189756308693876`*^9}, {3.5189756824603386`*^9, 
  3.5189757619738865`*^9}, {3.518975896988609*^9, 3.5189759012248507`*^9}, {
  3.5189761324030733`*^9, 3.5189761414545918`*^9}, {3.5189761799817953`*^9, 
  3.5189763260451493`*^9}, {3.518976428037983*^9, 3.5189764340553274`*^9}, {
  3.5189764750006695`*^9, 3.5189764792269106`*^9}, {3.518976647870557*^9, 
  3.5189766866267734`*^9}, {3.518976788982628*^9, 3.518976807760702*^9}, {
  3.5189768404455714`*^9, 3.5189768508951693`*^9}, {3.518976923713334*^9, 
  3.518976942492408*^9}, {3.518977032415551*^9, 3.5189770618562355`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"16.318000000000072`", ",", "748317"}], "}"}]], "Output",
 CellChangeTimes->{3.5189770791762257`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 38", "Section",
 CellChangeTimes->{{3.5194297152185593`*^9, 3.5194297164816313`*^9}}],

Cell[TextData[{
 "Take the number 192 and multiply it by each of 1, 2, and 3:\n\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{"192", " ", "1"}], "=", "192"}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{"192", " ", "2"}], " ", "=", "384"}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{"192", " ", "3"}], "=", "576"}], TraditionalForm]}]],
 "\n\nBy concatenating each product we get the 1 to 9 pandigital, 192384576. \
We will call 192384576 the concatenated product of 192 and (1,2,3)\n\nThe \
same can be achieved by starting with 9 and multiplying by 1, 2, 3, 4, and 5, \
giving the pandigital, 918273645, which is the concatenated product of 9 and \
(1,2,3,4,5).\n\nWhat is the largest 1 to 9 pandigital 9-digit number that can \
be formed as the concatenated product of an integer with (1,2, ... , n) where \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", ">", "1"}], TraditionalForm]]],
 "?"
}], "Text",
 CellChangeTimes->{{3.519429722458973*^9, 3.519429773017865*^9}, {
  3.5194300498336983`*^9, 3.5194300552110057`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.519531960396896*^9, 3.519531963340064*^9}, {
  3.5716106196908765`*^9, 3.5716106205489254`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "pandigitalQ", "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"pandigitalQ", "[", "num_", "]"}], ":=", 
      RowBox[{
       RowBox[{"Sort", "[", 
        RowBox[{"IntegerDigits", "[", "num", "]"}], "]"}], "\[Equal]", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", 
         RowBox[{"IntegerLength", "[", "num", "]"}]}], "]"}]}]}], ";", 
     RowBox[{"Max", "[", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"pandigitalQ", "[", 
               RowBox[{"FromDigits", "[", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"Map", "[", 
                  RowBox[{"IntegerDigits", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "i"}], ",", 
                    RowBox[{"2", "i"}], ",", 
                    RowBox[{"3", "i"}]}], "}"}]}], "]"}], "]"}], "]"}], "]"}],
               ",", 
              RowBox[{"FromDigits", "[", 
               RowBox[{"Flatten", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"IntegerDigits", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"1", "i"}], ",", 
                    RowBox[{"2", "i"}], ",", 
                    RowBox[{"3", "i"}]}], "}"}]}], "]"}], "]"}], "]"}], ",", 
              "Null"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "100", ",", "334"}], "}"}]}], "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"pandigitalQ", "[", 
               RowBox[{"FromDigits", "[", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"Map", "[", 
                  RowBox[{"IntegerDigits", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "i"}], ",", 
                    RowBox[{"2", "i"}]}], "}"}]}], "]"}], "]"}], "]"}], "]"}],
               ",", 
              RowBox[{"FromDigits", "[", 
               RowBox[{"Flatten", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{"IntegerDigits", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"1", "i"}], ",", 
                    RowBox[{"2", "i"}]}], "}"}]}], "]"}], "]"}], "]"}], ",", 
              "Null"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "10000"}], "}"}]}], "]"}]}], "]"}], 
        ",", "Null"}], "]"}], "]"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5195314270693913`*^9, 3.5195315411339154`*^9}, {
  3.5195317569152575`*^9, 3.5195318606551905`*^9}, {3.519531907057845*^9, 
  3.519531918225484*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.560999999999891`", ",", "932718654"}], "}"}]], "Output",
 CellChangeTimes->{
  3.519531544134087*^9, 3.5195318105413246`*^9, {3.519531852106702*^9, 
   3.51953186238729*^9}, {3.5195319238688064`*^9, 3.519531929765144*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 39", "Section",
 CellChangeTimes->{{3.51948951118394*^9, 3.5194895122800026`*^9}}],

Cell["\<\
If p is the perimeter of a right angle triangle with integral length sides, \
{a,b,c}, there are exactly three solutions for p = 120.

{20,48,52}, {24,45,51}, {30,40,50}

For which value of p  1000, is the number of solutions maximised?\
\>", "Text",
 CellChangeTimes->{3.5194895253257484`*^9}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5716106951171904`*^9, 3.571610695965239*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ans", ",", "max", ",", "count", ",", "trisol", ",", "trisolQ"}],
      "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"trisol", "[", 
       RowBox[{"a_", ",", " ", "p_"}], "]"}], " ", ":=", " ", 
      RowBox[{"{", 
       RowBox[{"a", ",", " ", 
        RowBox[{"p", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "*", "a"}], " ", "-", " ", "p"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", 
             RowBox[{"(", 
              RowBox[{"a", " ", "-", " ", "p"}], ")"}]}], ")"}]}], ")"}]}], 
        ",", " ", "\n", "     ", 
        RowBox[{"Abs", "[", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"a", "^", "2"}], " ", "+", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", "*", "a"}], " ", "-", " ", "p"}], ")"}], "^", 
               "2"}], "*", 
              RowBox[{"p", "^", "2"}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"4", "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"a", " ", "-", " ", "p"}], ")"}], "^", "2"}]}], 
             ")"}]}]}], "]"}], "]"}]}], "}"}]}], ";", 
     RowBox[{
      RowBox[{"trisolQ", "[", "sol_", "]"}], ":=", 
      RowBox[{
       RowBox[{"ArrayQ", "[", 
        RowBox[{"sol", ",", "_", ",", 
         RowBox[{
          RowBox[{"#1", ">", "0"}], "&"}]}], "]"}], "&&", 
       RowBox[{"ArrayQ", "[", 
        RowBox[{"sol", ",", "_", ",", "IntegerQ"}], "]"}]}]}], ";", " ", 
     RowBox[{"ans", "=", "0"}], ";", 
     RowBox[{"max", "=", "0"}], ";", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"count", "=", "0"}], ";", 
        RowBox[{
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"sol", "=", 
             RowBox[{"trisol", "[", 
              RowBox[{"a", ",", "p"}], "]"}]}], ";", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"trisolQ", "[", "sol", "]"}], ",", 
              RowBox[{"count", "++"}], ",", "Continue"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"a", ",", "1", ",", 
             RowBox[{"p", "-", "2"}]}], "}"}]}], "]"}], 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"count", ">", "max"}], ",", 
           RowBox[{
            RowBox[{"max", "=", "count"}], ";", 
            RowBox[{"ans", "=", "p"}], ";"}], ",", "Continue"}], "]"}]}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"p", ",", "1", ",", "1000"}], "}"}]}], "]"}], ";", "ans"}]}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5194886616333485`*^9, 3.5194886866257772`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"19.172`", ",", "840"}], "}"}]], "Output",
 CellChangeTimes->{3.519488733988487*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 40", "Section",
 CellChangeTimes->{{3.5189190808392043`*^9, 3.518919082359291*^9}}],

Cell[TextData[{
 "An irrational decimal fraction is created by concatenating the positive \
integers:\n\n",
 StyleBox["0.123456789101112131415161718192021...\n", "Output"],
 "\nIt can be seen that the 12th digit of the fractional part is 1.\n\nIf dn \
represents the nth digit of the fractional part, find the value of the \
following expression.\n\n",
 StyleBox["d1 * d10 * d100 * d1000 * d10000 * d100000 * d1000000", "Input"]
}], "Text",
 CellChangeTimes->{
  3.5189190958000603`*^9, {3.518919135926355*^9, 3.518919144862866*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.571610793837837*^9, 3.571610794660884*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "num", "}"}], ",", 
    RowBox[{
     RowBox[{"num", " ", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"IntegerDigits", "[", 
        RowBox[{"Table", "[", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "185185"}], "}"}]}], "]"}], "]"}], 
       "]"}]}], ";", " ", 
     RowBox[{"Times", "[", 
      RowBox[{
       RowBox[{"num", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"num", "[", 
        RowBox[{"[", "10", "]"}], "]"}], ",", 
       RowBox[{"num", "[", 
        RowBox[{"[", "100", "]"}], "]"}], ",", 
       RowBox[{"num", "[", 
        RowBox[{"[", "1000", "]"}], "]"}], ",", 
       RowBox[{"num", "[", 
        RowBox[{"[", "10000", "]"}], "]"}], ",", 
       RowBox[{"num", "[", 
        RowBox[{"[", "100000", "]"}], "]"}], ",", 
       RowBox[{"num", "[", 
        RowBox[{"[", "1000000", "]"}], "]"}]}], "]"}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.518918938868084*^9, 3.5189189482876225`*^9}, {
  3.5189189980764704`*^9, 3.518919056627819*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.2480000000000007`", ",", "210"}], "}"}]], "Output",
 CellChangeTimes->{3.518919058878948*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 42", "Section",
 CellChangeTimes->{{3.5189196707349443`*^9, 3.5189196722310295`*^9}, {
   3.519535003688962*^9, 3.519535006500123*^9}, 3.5716111552605095`*^9}],

Cell[TextData[{
 "The nth term of the sequence of triangle numbers is given by, tn = \.bdn (n \
+ 1); so the first ten triangle numbers are : \n\n",
 StyleBox["1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...\n\n", "Output"],
 "By converting each letter in a word to a number corresponding to its \
alphabetical position and adding these values we form a word value.For \
example, the word value for SKY is 19 + 11 + 25 = 55 = t10.If the word value \
is a triangle number then we shall call the word a triangle word.\n\nUsing ",
 ButtonBox["words.txt",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://projecteuler.net/project/words.txt"], None},
  ButtonNote->"http://projecteuler.net/project/words.txt"],
 " (right click and' Save Link/Target As ...'), a 16 K text file containing \
nearly two - thousand common English words, how many are triangle words?"
}], "Text",
 CellChangeTimes->{{3.5189197560418234`*^9, 3.5189198202194943`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.571611150486236*^9, 3.571611151301283*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tri", ",", "wordscore", ",", "scores", ",", "count"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"count", "=", "0"}], ";", 
     RowBox[{
      RowBox[{"tri", "[", "n_", "]"}], ":=", 
      RowBox[{
       RowBox[{"1", "/", "2"}], " ", "n", 
       RowBox[{"(", 
        RowBox[{"n", "+", "1"}], ")"}]}]}], ";", 
     RowBox[{
      RowBox[{"wordscore", "[", "word_", "]"}], ":=", 
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{"ToCharacterCode", "[", "word", "]"}], "-", 
        RowBox[{"Subtract", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ToCharacterCode", "[", "\"\<A\>\"", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}]}], "]"}]}], ";", 
     RowBox[{"scores", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"wordscore", "[", "word", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"word", ",", 
          RowBox[{"StringSplit", "[", 
           RowBox[{
            RowBox[{"StringDrop", "[", 
             RowBox[{
              RowBox[{"StringDrop", "[", 
               RowBox[{
                RowBox[{
                "Import", "[", 
                 "\"\<http://projecteuler.net/project/words.txt\>\"", "]"}], 
                ",", "1"}], "]"}], ",", 
              RowBox[{"-", "1"}]}], "]"}], ",", "\"\<\\\",\\\"\>\""}], 
           "]"}]}], "}"}]}], "]"}]}], ";", 
     RowBox[{"Do", "[", " ", 
      RowBox[{
       RowBox[{"count", " ", "=", " ", 
        RowBox[{"count", " ", "+", " ", 
         RowBox[{"Count", "[", 
          RowBox[{"scores", ",", 
           RowBox[{"tri", "[", "i", "]"}]}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "20"}], "}"}]}], "]"}], ";", "count"}]}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5189577039463196`*^9, 3.5189578516037655`*^9}, {
  3.518957906436901*^9, 3.518957918281579*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.10899999999996314`", ",", "162"}], "}"}]], "Output",
 CellChangeTimes->{3.518957922424816*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 44", "Section",
 CellChangeTimes->{{3.5189691074315615`*^9, 3.518969110231722*^9}, {
   3.519535014053555*^9, 3.5195350157696533`*^9}, 3.5716112267896004`*^9}],

Cell[TextData[{
 "Pentagonal numbers are generated by the formula, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", "n", ")"}], "=", 
    RowBox[{
     RowBox[{"n", "(", 
      RowBox[{
       RowBox[{"3", "n"}], "+", "1"}], ")"}], "/", "2"}]}], TraditionalForm]]],
 ". The first ten pentagonal numbers are:\n\n",
 StyleBox["1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...\n", "Output"],
 "\nIt can be seen that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"P", "(", "4", ")"}], "+", 
     RowBox[{"P", "(", "7", ")"}]}], "=", 
    RowBox[{
     RowBox[{"22", "+", "70"}], "=", 
     RowBox[{"92", "=", 
      RowBox[{"P", "(", "8", ")"}]}]}]}], TraditionalForm]]],
 " . However, their difference, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"70", "-", "22"}], "=", "48"}], TraditionalForm]]],
 ", is not pentagonal.\n\nFind the pair of pentagonal numbers, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", "j", ")"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", "k", ")"}], TraditionalForm]]],
 ", for which their sum and difference is pentagonal and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"D", "=", 
    RowBox[{"|", 
     RowBox[{
      RowBox[{"P", "(", "k", ")"}], "-", 
      RowBox[{"P", "(", "j", ")"}]}], "|"}]}], TraditionalForm]]],
 " is minimised; what is the value of ",
 Cell[BoxData[
  FormBox["D", TraditionalForm]]],
 "?"
}], "Text",
 CellChangeTimes->{{3.518969128341758*^9, 3.518969242571291*^9}}],

Cell[CellGroupData[{

Cell["Original Solution", "Subsection",
 CellChangeTimes->{{3.519762950729495*^9, 3.5197629530806293`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pent", ",", "pentQ"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"pent", "[", "n_", "]"}], "=", 
      RowBox[{"n", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", "n"}], "-", "1"}], ")"}], "/", "2"}]}]}], ";", 
     RowBox[{
      RowBox[{"pentQ", "[", "x_", "]"}], "=", 
      RowBox[{
       RowBox[{"1", "/", "6"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "+", 
           RowBox[{"24", "x"}]}], "]"}]}], ")"}]}]}], ";", 
     RowBox[{"Catch", "[", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"IntegerQ", "[", 
            RowBox[{"pentQ", "[", 
             RowBox[{
              RowBox[{"pent", "[", "k", "]"}], "+", 
              RowBox[{"pent", "[", "j", "]"}]}], "]"}], "]"}], "&&", 
           RowBox[{"IntegerQ", "[", 
            RowBox[{"pentQ", "[", 
             RowBox[{
              RowBox[{"pent", "[", "k", "]"}], "-", 
              RowBox[{"pent", "[", "j", "]"}]}], "]"}], "]"}]}], ",", 
          RowBox[{"Throw", "[", 
           RowBox[{"{", 
            RowBox[{"k", ",", "j", ",", 
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"pent", "[", "k", "]"}], "-", 
               RowBox[{"pent", "[", "j", "]"}]}], "]"}]}], "}"}], "]"}], ",", 
          "Continue"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "10000"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "10000"}], "}"}]}], "]"}], "]"}]}]}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5189586256050353`*^9, 3.5189588833997803`*^9}, {
  3.518958928338351*^9, 3.5189589366578264`*^9}, {3.5189590495242825`*^9, 
  3.5189590711195173`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1302.25`", ",", 
   RowBox[{"{", 
    RowBox[{"2167", ",", "1020", ",", "5482660"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5189589235660777`*^9, 3.5189589771001396`*^9, 
  3.5189603995745006`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 45", "Section",
 CellChangeTimes->{{3.518969755254615*^9, 3.518969756807704*^9}}],

Cell[TextData[{
 "Triangle, pentagonal, and hexagonal numbers are generated by the following \
formulae : \n\n",
 StyleBox["Triangle \n", "Subsection"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"T", "(", "n", ")"}], "=", 
    RowBox[{
     RowBox[{"n", "(", 
      RowBox[{"n", "+", "1"}], ")"}], "/", "2"}]}], TraditionalForm]]],
 "\n",
 StyleBox["1,3,6,10,15,...", "Output"],
 "\n",
 StyleBox["Pentagonal ", "Subsection"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", "n", ")"}], "=", 
    RowBox[{
     RowBox[{"n", "(", 
      RowBox[{
       RowBox[{"3", "n"}], "-", "1"}], ")"}], "/", "2"}]}], TraditionalForm]]],
 " \n",
 StyleBox["1, 5, 12, 22, 35, ...\n", "Output"],
 StyleBox["Hexagonal\n", "Subsection"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"H", "(", "n", ")"}], "=", 
    RowBox[{"n", "(", 
     RowBox[{
      RowBox[{"2", "n"}], "-", "1"}], ")"}]}], TraditionalForm]]],
 " \n",
 StyleBox["1, 6, 15, 28, 45, ...\n", "Output"],
 "\nIt can be verified that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"T", "(", "285", ")"}], "=", 
      RowBox[{
       RowBox[{"P", "(", "165", ")"}], "=", "H143"}]}], ")"}], "=", "40755"}],
    TraditionalForm]]],
 ".\n\nFind the next triangle number that is also pentagonal and hexagonal."
}], "Text",
 CellChangeTimes->{{3.5189697635490894`*^9, 3.518969778215928*^9}, {
  3.5189699215321255`*^9, 3.518970093383955*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5189701814319906`*^9, 3.51897018194302*^9}, {
  3.5716114016226006`*^9, 3.571611403005679*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Intersection", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"n", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"3", "n"}], "-", "1"}], ")"}], "/", "2"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "100000"}], "}"}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "n"}], "-", "1"}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "100000"}], "}"}]}], "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5189702439795685`*^9, 3.5189703120004587`*^9}, {
  3.518970342466202*^9, 3.5189703456643844`*^9}, {3.5189715039776363`*^9, 
  3.518971506960807*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9979999999996063`", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "40755", ",", "1533776805"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5189752242401295`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 47", "Section",
 CellChangeTimes->{{3.5194907395521984`*^9, 3.5194907411432896`*^9}}],

Cell[TextData[{
 "The first two consecutive numbers to have two distinct prime factors are : \
\n",
 Cell[BoxData[
  FormBox[GridBox[{
     {GridBox[{
        {
         RowBox[{
          RowBox[{"14", "=", 
           RowBox[{"2", "*", "7"}]}], "\[IndentingNewLine]", 
          RowBox[{"15", "=", 
           RowBox[{"3", "*", "5"}]}]}]}
       },
       GridBoxAlignment->{"Columns" -> {{"="}}}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]]],
 "\nThe first three consecutive numbers to have three distinct prime factors \
are : \n",
 Cell[BoxData[
  FormBox[GridBox[{
     {
      RowBox[{
       RowBox[{"644", "=", 
        RowBox[{
         SuperscriptBox["2", "2"], "*", "7", "*", "23"}]}], 
       "\[IndentingNewLine]", 
       RowBox[{"645", "=", 
        RowBox[{"3", "*", "5", "*", "43"}]}], "\[IndentingNewLine]", 
       RowBox[{"646", "=", 
        RowBox[{"2", "*", "17", "*", "19"}]}]}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]]],
 "\nFind the first four consecutive integers to have four distinct primes \
factors.What is the first of these numbers?"
}], "Text",
 CellChangeTimes->{3.5194907506208315`*^9}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5716116790934706`*^9, 3.571611679989522*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "factors", "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"factors", "[", "num_Integer", "]"}], ":=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Power", "[", 
         RowBox[{
          RowBox[{"i", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"i", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"FactorInteger", "[", "num", "]"}]}], "}"}]}], "]"}]}], ";", 
     RowBox[{"Catch", "[", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"factors", "[", "a", "]"}], ",", 
              RowBox[{"factors", "[", 
               RowBox[{"a", "+", "1"}], "]"}], ",", 
              RowBox[{"factors", "[", 
               RowBox[{"a", "+", "2"}], "]"}], ",", 
              RowBox[{"factors", "[", 
               RowBox[{"a", "+", "3"}], "]"}]}], "]"}], "]"}], "\[Equal]", 
           "16"}], ",", 
          RowBox[{"Throw", "[", "a", "]"}], ",", "Continue"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "1", ",", "1000000"}], "}"}]}], "]"}], "]"}]}]}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5194907998596478`*^9, 3.5194908196877823`*^9}},
 FontWeight->"Plain"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9.500999999999998`", ",", "134043"}], "}"}]], "Output",
 CellChangeTimes->{3.519490772547086*^9, 3.5194908307494144`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 48", "Section",
 CellChangeTimes->{{3.518971370174983*^9, 3.518971377444399*^9}}],

Cell[TextData[{
 "The series, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["1", "1"], "+", 
       SuperscriptBox["2", "2"], "+", 
       SuperscriptBox["3", "3"], "+"}], "..."}], "+", 
     SuperscriptBox["10", "10"]}], "=", "10405071317"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nFind the last ten digits of the series, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["1", "1"], "+", 
      SuperscriptBox["2", "2"], "+", 
      SuperscriptBox["3", "3"], "+"}], "..."}], "+", 
    SuperscriptBox["1000", "1000"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.518971383436742*^9, 3.518971468746621*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.571611808197855*^9, 3.5716118091179075`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"FromDigits", "[", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"IntegerDigits", "[", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Power", "[", 
         RowBox[{"i", ",", "i"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "1000"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"-", "10"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.518971547268112*^9, 3.518971564177079*^9}, {
  3.5189716365162168`*^9, 3.5189716682980347`*^9}, {3.5189717157547493`*^9, 
  3.5189717322866945`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.031000000000114714`", ",", "9110846700"}], "}"}]], "Output",
 CellChangeTimes->{3.5189752287303867`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 49", "Section",
 CellChangeTimes->{{3.519498325097067*^9, 3.5194983268881693`*^9}}],

Cell["\<\
The arithmetic sequence, 1487, 4817, 8147, in which each of the terms \
increases by 3330, is unusual in two ways: (i) each of the three terms are \
prime, and, (ii) each of the 4-digit numbers are permutations of one another.

There are no arithmetic sequences made up of three 1-, 2-, or 3-digit primes, \
exhibiting this property, but there is one other 4-digit increasing sequence.

What 12-digit number do you form by concatenating the three terms in this \
sequence?\
\>", "Text",
 CellChangeTimes->{3.5194983351146393`*^9}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.571611848054135*^9, 3.5716118488931828`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sequence", ",", "permutationQ"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"permutationQ", "[", "num_", "]"}], ":=", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"FromDigits", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Permutations", "[", 
              RowBox[{"IntegerDigits", "[", 
               RowBox[{"num", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "}"}]}], 
          "]"}], ",", 
         RowBox[{"num", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], " ", "&&", " ", 
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"FromDigits", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Permutations", "[", 
              RowBox[{"IntegerDigits", "[", 
               RowBox[{"num", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "}"}]}], 
          "]"}], ",", 
         RowBox[{"num", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}]}], ";", 
     RowBox[{
      RowBox[{"sequence", "[", "start_Integer", "]"}], ":=", 
      RowBox[{"{", 
       RowBox[{"start", ",", 
        RowBox[{"start", "+", "3330"}], ",", 
        RowBox[{"start", "+", "6660"}]}], "}"}]}], ";", 
     RowBox[{"FromDigits", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"IntegerDigits", "[", 
        RowBox[{"Catch", "[", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"!", 
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{"PrimeQ", "[", 
                  RowBox[{"sequence", "[", "i", "]"}], "]"}], ",", "False"}], 
                "]"}]}], " ", "&&", " ", 
              RowBox[{"permutationQ", "[", 
               RowBox[{"sequence", "[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"Throw", "[", 
              RowBox[{"sequence", "[", "i", "]"}], "]"}], ",", "Continue"}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1489", ",", "9999", ",", "2"}], "}"}]}], "]"}],
          "]"}], "]"}], "]"}], "]"}]}]}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.030999999999996253`", ",", "296962999629"}], "}"}]], "Output",
 CellChangeTimes->{3.5195008963801355`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 52", "Section",
 CellChangeTimes->{{3.5195194422428985`*^9, 3.5195194441370068`*^9}}],

Cell["\<\
It can be seen that the number, 125874, and its double, 251748, contain \
exactly the same digits, but in a different order.

Find the smallest positive integer, x, such that 2x, 3x, 4x, 5x, and 6x, \
contain the same digits.\
\>", "Text",
 CellChangeTimes->{{3.51952892445925*^9, 3.5195289283074703`*^9}}],

Cell[CellGroupData[{

Cell["Original Solution", "Subsection",
 CellChangeTimes->{{3.519529973550255*^9, 3.519529975889388*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sequence", ",", "permutationQ"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"sequence", "[", "x_", "]"}], ":=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "x"}], ",", 
        RowBox[{"3", "x"}], ",", 
        RowBox[{"4", "x"}], ",", 
        RowBox[{"5", "x"}], ",", 
        RowBox[{"6", "x"}]}], "}"}]}], ";", 
     RowBox[{
      RowBox[{"permutationQ", "[", 
       RowBox[{"num_", ",", "check_"}], "]"}], " ", ":=", " ", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"FromDigits", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Permutations", "[", 
             RowBox[{"IntegerDigits", "[", "num", "]"}], "]"}]}], "}"}]}], 
         "]"}], ",", "check"}], "]"}]}], ";", 
     RowBox[{"Catch", "[", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"permutationQ", "[", 
                 RowBox[{"i", ",", "#"}], "]"}], "&"}], ",", 
               RowBox[{"sequence", "[", "i", "]"}]}], "]"}], ",", "False"}], 
            "]"}]}], ",", 
          RowBox[{"Throw", "[", "i", "]"}], ",", "Continue"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "1000000"}], "}"}]}], "]"}], "]"}]}]}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.519528290295978*^9, 3.519528346059168*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"459.95399999999995`", ",", "142857"}], "}"}]], "Output",
 CellChangeTimes->{3.519528843977647*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Optimized Solution", "Subsection",
 CellChangeTimes->{{3.5195299810736847`*^9, 3.519529983728837*^9}}],

Cell[TextData[{
 "I knew that the permutationQ function was way too resource intensive and \
was probably the main source of the slow down, especially since it had to run \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"6", "i", " "}], TraditionalForm]]],
 "times for each i. It wasn\[CloseCurlyQuote]t until I started reading \
through the Project Euler forums that I saw mention of using a test that just \
takes the digits for each number in the sequence, sorts them and checks \
whether the individual lists are equal. After a little finangling I managed \
to find a way to do this and incorporated it into my function. I also changed \
the range for i from 1,1000000 to instead only check values with a first \
digit of 1 (because 2 or more multiplied by 6 results in a 2 digit number). \
This was also inspired by solutions shared on the Project Euler forums."
}], "Text",
 CellChangeTimes->{{3.5195299908932467`*^9, 3.519530201538295*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "sequenceQ", "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"sequenceQ", "[", "num_", "]"}], ":=", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "seq", "}"}], ",", 
        RowBox[{
         RowBox[{"seq", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Sort", "[", 
              RowBox[{"IntegerDigits", "[", "#", "]"}], "]"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{"num", ",", 
              RowBox[{"2", "num"}], ",", 
              RowBox[{"3", "num"}], ",", 
              RowBox[{"4", "num"}], ",", 
              RowBox[{"5", "num"}], ",", 
              RowBox[{"6", "num"}]}], "}"}]}], "]"}]}], ";", " ", 
         RowBox[{
          RowBox[{"seq", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
          RowBox[{"seq", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
          RowBox[{"seq", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
          RowBox[{"seq", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", 
          RowBox[{"seq", "[", 
           RowBox[{"[", "5", "]"}], "]"}], "\[Equal]", 
          RowBox[{"seq", "[", 
           RowBox[{"[", "6", "]"}], "]"}]}]}]}], "]"}]}], ";", 
     RowBox[{"Catch", "[", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"sequenceQ", "[", "i", "]"}], ",", 
          RowBox[{"Throw", "[", "i", "]"}], ",", "Continue"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", "166"}], "]"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"1000", ",", "1666"}], "]"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"10000", ",", "16666"}], "]"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"100000", ",", "166666"}], "]"}]}], "]"}]}], "}"}]}], 
       "]"}], "]"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5195294693074136`*^9, 3.5195295032073526`*^9}, {
  3.5195298533513794`*^9, 3.5195299415974274`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.714000000000052`", ",", "142857"}], "}"}]], "Output",
 CellChangeTimes->{3.519529946004679*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 53", "Section",
 CellChangeTimes->{{3.5190438459519396`*^9, 3.5190438541874104`*^9}, {
  3.5195350996654515`*^9, 3.519535105277773*^9}, {3.571612065381565*^9, 
  3.571612065709584*^9}}],

Cell[TextData[{
 "There are exactly ten ways of selecting three from five, 12345:\n\n123, \
124, 125, 134, 135, 145, 234, 235, 245, and 345\n\nIn combinatorics, we use \
the notation, 5C3 = 10.\n\nIn general, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"nCr", "=", 
    FractionBox[
     RowBox[{"n", "!"}], 
     RowBox[{
      RowBox[{"r", "!"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "r"}], ")"}], "!"}]}]]}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "\[LessEqual]", "n"}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"n", "!"}], " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"n", "(", 
       RowBox[{"n", "-", "1"}], ")"}], "..."}], 
     RowBox[{"(", "3", ")"}], 
     RowBox[{"(", "2", ")"}], 
     RowBox[{"(", "1", ")"}]}]}], TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"0", "!"}], " ", "=", "1"}], TraditionalForm]]],
 ".\nIt is not until n = 23, that a value exceeds one-million: 23C10 = \
1144066.\n\nHow many, not necessarily distinct, values of  nCr, for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "\[LessEqual]", "n", "\[LessEqual]", "100"}], 
   TraditionalForm]]],
 ", are greater than one-million?"
}], "Text",
 CellChangeTimes->{{3.519044086846718*^9, 3.5190440977723427`*^9}, {
  3.5190441284180956`*^9, 3.5190442531152277`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5716120427662716`*^9, 3.571612043669323*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "count", "}"}], ",", 
    RowBox[{
     RowBox[{"count", "=", "0"}], ";", " ", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Binomial", "[", 
             RowBox[{"n", ",", "r"}], "]"}], ">", "1000000"}], ",", 
           RowBox[{"count", " ", "=", " ", 
            RowBox[{"count", "+", "1"}]}], ",", "Continue"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "100"}], "}"}]}], "]"}], ";", " ", 
     "count"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5190436923331532`*^9, 3.519043808115775*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.04599999999970139`", ",", "4075"}], "}"}]], "Output",
 CellChangeTimes->{{3.519043798436222*^9, 3.519043809630862*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 56", "Section",
 CellChangeTimes->{{3.5190445739045763`*^9, 3.519044577190764*^9}}],

Cell[TextData[{
 "A googol ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["10", "100"]}], TraditionalForm]]],
 ") is a massive number: one followed by one-hundred zeros; ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["100", "100"], TraditionalForm]]],
 " is almost unimaginably large: one followed by two-hundred zeros. Despite \
their size, the sum of the digits in each number is only 1.\n\nConsidering \
natural numbers of the form, ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["a", "b"], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", ",", 
    RowBox[{"b", "<", "100"}]}], TraditionalForm]]],
 ", what is the maximum digital sum?"
}], "Text",
 CellChangeTimes->{{3.519044691706314*^9, 3.519044731009562*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.571612240365574*^9, 3.5716122412536244`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Max", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"a", "^", "b"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", "100"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "1", ",", "100"}], "}"}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5190444926559286`*^9, 3.519044548576127*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.32800000000041374`", ",", "972"}], "}"}]], "Output",
 CellChangeTimes->{{3.5190445409876933`*^9, 3.519044549789197*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 63", "Section",
 CellChangeTimes->{{3.5195337626969814`*^9, 3.519533765739156*^9}}],

Cell[TextData[{
 "The 5-digit number, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"16807", "=", 
    SuperscriptBox["7", "5"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", is also a fifth power. Similarly, the 9-digit number, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"134217728", "=", 
    SuperscriptBox["8", "9"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", is a ninth power.\n\nHow many n-digit positive integers exist which are \
also an nth power?"
}], "Text",
 CellChangeTimes->{{3.519533830015832*^9, 3.519533863603753*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.571612543013884*^9, 3.5716125443249593`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Length", "[", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"IntegerLength", "[", 
            RowBox[{"i", "^", "n"}], "]"}], "\[Equal]", "n"}], ",", 
          RowBox[{"i", "^", "n"}], ",", "Null"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "100"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "21"}], "}"}]}], "]"}], "]"}], ",", 
     "Null"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5195332446503506`*^9, 3.5195332819204826`*^9}, {
  3.5195333231248393`*^9, 3.5195334175292387`*^9}, {3.5195334689421797`*^9, 
  3.519533502679109*^9}, {3.519533576594337*^9, 3.5195336078421245`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.030999999999999948`", ",", "49"}], "}"}]], "Output",
 CellChangeTimes->{{3.5195332674536552`*^9, 3.519533282441512*^9}, 
   3.5195333253469667`*^9, {3.5195333796350718`*^9, 3.5195334192543373`*^9}, {
   3.5195334705442715`*^9, 3.519533503097133*^9}, {3.519533582818693*^9, 
   3.519533608312151*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 65", "Section",
 CellChangeTimes->{{3.5191428616633143`*^9, 3.51914286456548*^9}}],

Cell[TextData[{
 "The square root of 2 can be written as an infinite continued fraction.\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SqrtBox["2"], "=", 
    RowBox[{"1", "+", 
     FractionBox["1", 
      RowBox[{"2", "+", 
       FractionBox["1", 
        RowBox[{"2", "+", 
         FractionBox["1", 
          RowBox[{"2", "+", 
           FractionBox["1", 
            RowBox[{
             RowBox[{"2", "+"}], "..."}]]}]]}]]}]]}]}], TraditionalForm]]],
 "\n2 = 1 +\t\n\nThe infinite continued fraction can be written, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SqrtBox["2"], "=", 
    RowBox[{"[", 
     RowBox[{"1", ";", 
      RowBox[{"(", "2", ")"}]}], "]"}]}], TraditionalForm]]],
 ", (2) indicates that 2 repeats ad infinitum. In a similar way, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SqrtBox["23"], "=", 
    RowBox[{"[", 
     RowBox[{"4", ";", 
      RowBox[{"(", 
       RowBox[{"1", ",", "3", ",", "1", ",", "8"}], ")"}]}], "]"}]}], 
   TraditionalForm]]],
 ".\n\nIt turns out that the sequence of partial values of continued \
fractions for square roots provide the best rational approximations. Let us \
consider the convergents for ",
 Cell[BoxData[
  FormBox[
   SqrtBox["2"], TraditionalForm]]],
 ".\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "+", 
     FractionBox["1", "2"]}], "=", 
    FractionBox["3", "2"]}], TraditionalForm]]],
 "\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "+", 
     FractionBox["1", 
      RowBox[{"2", "+", 
       FractionBox["1", "2"]}]]}], "=", 
    FractionBox["7", "5"]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "+", 
     FractionBox["1", 
      RowBox[{"2", "+", 
       FractionBox["1", 
        RowBox[{"2", "+", 
         FractionBox["1", "2"]}]]}]]}], "=", 
    FractionBox["17", "12"]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "+", 
     FractionBox["1", 
      RowBox[{"2", "+", 
       FractionBox["1", 
        RowBox[{"2", "+", 
         FractionBox["1", 
          RowBox[{"2", "+", 
           FractionBox["1", "2"]}]]}]]}]]}], "=", 
    FractionBox["41", "29"]}], TraditionalForm]]],
 "\n \nHence the sequence of the first ten convergents for 2 are:\n\n",
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{"1", ",", 
    FractionBox["3", "2"], ",", 
    FractionBox["7", "5"], ",", 
    FractionBox["17", "12"], ",", 
    FractionBox["41", "29"], ",", 
    FractionBox["99", "70"], ",", 
    FractionBox["239", "169"], ",", 
    FractionBox["577", "408"], ",", 
    FractionBox["1393", "985"], ",", 
    FractionBox["3363", "2378"], ",", "..."}], TraditionalForm]], "Output"], 
  "Output"],
 StyleBox["\n", "Output"],
 "\nWhat is most surprising is that the important mathematical constant,\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"e", "=", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"2", ";", "1"}], ",", "2", ",", "1", ",", "1", ",", "4", ",", 
      "1", ",", "1", ",", "6", ",", "1", ",", "...", ",", "1", ",", 
      RowBox[{"2", "k"}], ",", "1", ",", "..."}], "]"}]}], TraditionalForm]]],
 ".\n\nThe first ten terms in the sequence of convergents for e are:\n\n",
 StyleBox[Cell[BoxData[
  FormBox[
   RowBox[{"2", ",", "3", ",", 
    FractionBox["8", "3"], ",", 
    FractionBox["11", "4"], ",", 
    FractionBox["19", "7"], ",", 
    FractionBox["87", "32"], ",", 
    FractionBox["106", "39"], ",", 
    FractionBox["193", "71"], ",", 
    FractionBox["1264", "465"], ",", 
    FractionBox["1457", "536"], ",", "..."}], TraditionalForm]], "Output"], 
  "Output"],
 StyleBox["\n", "Output"],
 "\nThe sum of digits in the numerator of the 10th convergent is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", "+", "4", "+", "5", "+", "7"}], "=", "17"}], 
   TraditionalForm]]],
 ".\n\nFind the sum of digits in the numerator of the 100th convergent of the \
continued fraction for ",
 Cell[BoxData[
  FormBox["e", TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.519142869702774*^9, 3.519143297426238*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5716126315899506`*^9, 3.5716126324700007`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Total", "[", 
   RowBox[{"IntegerDigits", "[", 
    RowBox[{"Numerator", "[", 
     RowBox[{"FromContinuedFraction", "[", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Prepend", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"2", "k"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "1", ",", "34"}], "}"}]}], "]"}], ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], "]"}], ",", "100"}], "]"}], 
      "]"}], "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.519142318954273*^9, 3.519142381824869*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "272"}], "}"}]], "Output",
 CellChangeTimes->{{3.519142365449932*^9, 3.5191423825499105`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Alternate Solution", "Subsection",
 CellChangeTimes->{{3.519143321564619*^9, 3.5191433237587447`*^9}}],

Cell["\<\
This felt a little too much like cheating because it uses the built in \
Convergents function. Since I already had created the Table of values \
required I instead used that, although either solution provided the correct \
answer in no time at all. Looking at the solutions posted in the Project \
Euler forums it looks like a lot of people used the built in Convergents \
function to find the solution.\
\>", "Text",
 CellChangeTimes->{{3.519143335078392*^9, 3.519143423244435*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Total", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{"Numerator", "[", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"Convergents", "[", 
         RowBox[{"E", ",", "100"}], "]"}], ",", 
        RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5191423952566376`*^9, 3.519142480556516*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", "272"}], "}"}]], "Output",
 CellChangeTimes->{{3.5191424219661655`*^9, 3.5191424813465614`*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 66", "Section",
 CellChangeTimes->{{3.5284581791640654`*^9, 3.52845821036485*^9}, 
   3.528458294198645*^9}],

Cell[TextData[{
 "Consider quadratic Diophantine equations of the form:\n",
 Cell[BoxData[
  FormBox[GridBox[{
     {
      RowBox[{GridBox[{
         {
          RowBox[{
           SuperscriptBox["x", "2"], "-", 
           SuperscriptBox["Dy", "2"]}]}
        },
        GridBoxAlignment->{"Columns" -> {{"Center"}}}], "=", "1"}]}
    },
    GridBoxItemSize->{"Columns" -> {{
         Scaled[0.96]}}}], TraditionalForm]]],
 "\nFor example, when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"D", "=", "13"}], TraditionalForm]]],
 ", the minimal solution in ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["649", "2"], "-", 
     RowBox[{"13", " ", 
      SuperscriptBox["180", "2"]}]}], "=", "1"}], TraditionalForm]]],
 ".\n\nIt can be assumed that there are no solutions in positive integers \
when D is square.\n\nBy finding minimal solutions in ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"D", "=", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "5", ",", "6", ",", "7"}], "}"}]}], 
   TraditionalForm]]],
 ", we obtain the following:\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["3", "2"], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox["2", "2"]}]}], "=", "1"}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["2", "2"], "-", 
     RowBox[{"3", " ", 
      SuperscriptBox["1", "1"]}]}], "=", "1"}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["9", "2"], "-", 
     RowBox[{"5", " ", 
      SuperscriptBox["4", "2"]}]}], "=", "1"}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["5", "2"], "-", 
     RowBox[{"6", " ", 
      SuperscriptBox["2", "2"]}]}], "=", "1"}], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["8", "2"], "-", 
     RowBox[{"7", " ", 
      SuperscriptBox["3", "2"]}]}], "=", "1"}], TraditionalForm]}]],
 "\nHense, by considering minimal solutions in ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"D", "\[LessEqual]", " ", "7"}], TraditionalForm]]],
 ", the largest ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " is obtained when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"D", "=", "5"}], TraditionalForm]]],
 ".\n\nFind the value of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"D", "\[LessEqual]", "1000"}], TraditionalForm]]],
 " in minimal solutions of x for which the largest value of x is obtained."
}], "Text",
 CellChangeTimes->{{3.519688939772066*^9, 3.5196892520909295`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5716131259662275`*^9, 3.5716131268132753`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "solutions", "}"}], ",", 
    RowBox[{
     RowBox[{"solutions", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "/.", 
           RowBox[{"FindInstance", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"x", "^", "2"}], "-", 
                RowBox[{"d", " ", 
                 RowBox[{"y", "^", "2"}]}]}], "\[Equal]", "1"}], "&&", " ", 
              RowBox[{"x", ">", "0"}], "&&", 
              RowBox[{"y", ">", "0"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}], ",", "Integers"}], "]"}]}], " ",
           ",", "d"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"d", ",", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", "1000"}], "]"}], ",", 
            RowBox[{
             RowBox[{"Not", "[", 
              RowBox[{"IntegerQ", "[", 
               RowBox[{"Sqrt", "[", "#", "]"}], "]"}], "]"}], "&"}]}], 
           "]"}]}], "}"}]}], "]"}]}], ";", 
     RowBox[{"solutions", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"Position", "[", 
          RowBox[{"solutions", ",", 
           RowBox[{"Max", "[", "solutions", "]"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5284579894482145`*^9, 3.528458092477107*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"37.924`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "16421658242965910275055840472270471049", "}"}], ",", 
     "661"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.528458085266695*^9, 3.528458142650977*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 69", "Section",
 CellChangeTimes->{{3.5190464541601205`*^9, 3.5190464558232155`*^9}, {
   3.519535139374723*^9, 3.5195351439489846`*^9}, 3.571613478446388*^9}],

Cell["\<\
Euler\[CloseCurlyQuote]s Totient function, \[CurlyPhi](n) [sometimes called \
the phi function], is used to determine the number of numbers less than n \
which are relatively prime to n. For example, as 1, 2, 4, 5, 7, and 8, are \
all less than nine and relatively prime to nine, \[CurlyPhi](9)=6.

n\tRelatively Prime\t\[CurlyPhi](n)\tn/\[CurlyPhi](n)
2\t1\t\t\t1\t2
3\t1,2\t\t\t2\t1.5
4\t1,3\t\t\t2\t2
5\t1,2,3,4\t\t\t4\t1.25
6\t1,5\t\t\t2\t3
7\t1,2,3,4,5,6\t\t6\t1.1666...
8\t1,3,5,7\t\t\t4\t2
9\t1,2,4,5,7,\t\t8\t1.5
10\t1,3,7,9\t\t\t4\t2.5

It can be seen that n=6 produces a maximum n/\[CurlyPhi](n) for n  10.

Find the value of n  1,000,000 for which n/\[CurlyPhi](n) is a maximum.\
\>", "Text",
 CellChangeTimes->{
  3.5190464641986947`*^9, {3.5190465315195456`*^9, 3.5190465713488235`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5190465922720203`*^9, 3.5190465930310636`*^9}, {
  3.571613388952269*^9, 3.5716133898373194`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "array", "}"}], ",", 
    RowBox[{
     RowBox[{"array", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"n", "/", 
         RowBox[{"EulerPhi", "[", "n", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "1000000"}], "}"}]}], "]"}]}], ";", 
     RowBox[{"Position", "[", 
      RowBox[{"array", ",", 
       RowBox[{"Max", "[", "array", "]"}]}], "]"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.519046307062707*^9, 3.519046373800524*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"25.304000000000208`", ",", 
   RowBox[{"{", 
    RowBox[{"{", "510510", "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5190464040022516`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 70", "Section",
 CellChangeTimes->{{3.5191456701299496`*^9, 3.519145671520029*^9}, {
   3.5195351808570957`*^9, 3.5195351833032355`*^9}, 3.5716135354076457`*^9}],

Cell[TextData[{
 "Euler\[CloseCurlyQuote]s Totient function, \[CurlyPhi](n) [sometimes called \
the phi function], is used to determine the number of positive numbers less \
than or equal to n which are relatively prime to n. For example, as 1, 2, 4, \
5, 7, and 8, are all less than nine and relatively prime to nine, \
\[CurlyPhi](9)=6.\n\nThe number 1 is considered to be relatively prime to \
every positive number, so \[CurlyPhi](1)=1.\n\nInterestingly, \
\[CurlyPhi](87109)=79180, and it can be seen that 87109 is a permutation of \
79180.\n\nFind the value of n, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "<", "n", "<", 
    SuperscriptBox["10", "7"]}], TraditionalForm]]],
 ", for which \[CurlyPhi](n) is a permutation of n and the ratio \
n/\[CurlyPhi](n) produces a minimum."
}], "Text",
 CellChangeTimes->{{3.519145682570661*^9, 3.5191457128483925`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.519145731453457*^9, 3.519145733452571*^9}, 
   3.571613508807124*^9}],

Cell["\<\
I solved this problem while working through the components of it. I haven\
\[CloseCurlyQuote]t figured out how to best combine it into one operation, \
and even if I do it is going to need some serious optimization as the table \
function alone takes 6 minutes or so to calculate. Looking at the other \
solutions posted on the Project Euler website most people seemed to have \
brute forced this in a similar fashion, although there was a lot of \
discussion about how to optimize the search. I may go back later and see if \
there is something I could do to improve my results.\
\>", "Text",
 CellChangeTimes->{{3.5191477875030565`*^9, 3.5191479186555576`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"permutationQ", "[", 
   RowBox[{"x_Integer", ",", "y_Integer"}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{"Sort", "[", 
    RowBox[{"IntegerDigits", "[", "x", "]"}], "]"}], "\[Equal]", 
   RowBox[{"Sort", "[", 
    RowBox[{"IntegerDigits", "[", "y", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.519144070432452*^9, 3.519144105785474*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"test", "=", 
    RowBox[{"DeleteCases", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"permutationQ", "[", 
           RowBox[{"n", ",", 
            RowBox[{"EulerPhi", "[", "n", "]"}]}], "]"}], ",", "n", ",", 
          "Null"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "10000000"}], "}"}]}], "]"}], ",", 
      "Null"}], "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.519144204333111*^9, 3.5191442630434685`*^9}, {
  3.519144521734265*^9, 3.5191445320098524`*^9}, {3.5191457784921474`*^9, 
  3.519145801029436*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"378.09999999999997`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.5191442070452657`*^9, 3.5191445177220354`*^9, 
  3.519144937254031*^9, 3.519146218933339*^9}]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"Delete", "[", 
    RowBox[{"test", ",", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5191451225526295`*^9, 3.5191451421107483`*^9}, {
  3.519145250764963*^9, 3.519145295101499*^9}, {3.5191463183460255`*^9, 
  3.5191463285286074`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"test2", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Divide", "[", 
      RowBox[{"n", ",", 
       RowBox[{"EulerPhi", "[", "n", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "test"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5191451556655235`*^9, 3.519145197855937*^9}, {
  3.5191463399612617`*^9, 3.5191463439444895`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"test2", ",", 
   RowBox[{"Min", "[", "test2", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5191452062284155`*^9, 3.519145239556322*^9}, {
  3.5191463476717024`*^9, 3.5191463535880413`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "1769", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.5191452158939686`*^9, 3.5191452374142*^9}, 
   3.519145300573812*^9, 3.5191463628635716`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"test", "[", 
  RowBox[{"[", "1769", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5191453055330954`*^9, 3.519145310297368*^9}, 
   3.519146369752966*^9}],

Cell[BoxData["8319823"], "Output",
 CellChangeTimes->{3.5191453114574347`*^9, 3.5191463708060255`*^9}]
}, Closed]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"permutationQ", ",", "test", ",", "test2"}], "]"}]], "Input",
 CellChangeTimes->{{3.5191459371232204`*^9, 3.519145954297203*^9}, {
  3.519146334647958*^9, 3.5191463458936005`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 97", "Section",
 CellChangeTimes->{{3.5190448326643763`*^9, 3.5190448451380897`*^9}}],

Cell[TextData[{
 "The first known prime found to exceed one million digits was discovered in \
1999, and is a Mersenne prime of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", "6972593"], "-", "1"}], TraditionalForm]]],
 "; it contains exactly 2,098,960 digits.Subsequently other Mersenne primes, \
of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", "p"], "-", "1"}], TraditionalForm]]],
 ", have been found which contain more digits. However, in 2004 there was \
found a massive non - Mersenne prime which contains 2,357,207 digits : ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"28433", " ", 
     SuperscriptBox["2", "7830457"]}], "+", "1"}], TraditionalForm]]],
 ".\n\nFind the last ten digits of this prime number."
}], "Text",
 CellChangeTimes->{{3.5190451622462273`*^9, 3.519045251913356*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5716144059904404`*^9, 3.5716144068844914`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"FromDigits", "[", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"IntegerDigits", "[", 
      RowBox[{
       RowBox[{"28433", 
        RowBox[{"Power", "[", 
         RowBox[{"2", ",", "7830457"}], "]"}]}], "+", "1"}], "]"}], ",", 
     RowBox[{"-", "10"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5190450665137515`*^9, 3.51904511123831*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.9330000000004217`", ",", "8739992577"}], "}"}]], "Output",
 CellChangeTimes->{3.519045114944522*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 99", "Section",
 CellChangeTimes->{{3.5190510008581767`*^9, 3.519051008818632*^9}}],

Cell[TextData[{
 "Comparing two numbers written in index form like ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "11"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["3", "7"], TraditionalForm]]],
 " is not difficult, as any calculator would confirm that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["2", "11"], "=", 
    RowBox[{
     RowBox[{"2048", "<", 
      SuperscriptBox["3", "7"]}], "=", "2187"}]}], TraditionalForm]]],
 ".\n\nHowever, confirming that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["632382", "518061"], ">", 
    SuperscriptBox["519432", "525806"]}], TraditionalForm]]],
 " would be much more difficult, as both numbers contain over three million \
digits.Using ",
 ButtonBox["base_exp.txt",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://projecteuler.net/project/base_exp.txt"], None},
  ButtonNote->"http://projecteuler.net/project/base_exp.txt"],
 " (right click and' Save Link/Target As ...'), a 22 K text file containing \
one thousand lines with a base/exponent pair on each line, determine which \
line number has the greatest numerical value.\n\nNOTE : The first two lines \
in the file represent the numbers in the example given above."
}], "Text",
 CellChangeTimes->{{3.5190510211393366`*^9, 3.519051051416068*^9}, {
  3.519052220411931*^9, 3.5190523183485327`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5716145445023627`*^9, 3.5716145453654118`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "test", "}"}], ",", 
    RowBox[{
     RowBox[{"test", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FromDigits", "[", 
          RowBox[{"j", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], 
         RowBox[{"Log", "[", 
          RowBox[{"FromDigits", "[", 
           RowBox[{"j", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"StringSplit", "[", 
               RowBox[{"i", ",", "\"\<,\>\""}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Import", "[", 
                 RowBox[{
                 "\"\<http://projecteuler.net/project/base_exp.txt\>\"", ",", 
                  "\"\<Table\>\""}], "]"}]}], "}"}]}], "]"}], ",", "1"}], 
           "]"}]}], "}"}]}], "]"}]}], ";", 
     RowBox[{"Position", "[", 
      RowBox[{"test", ",", 
       RowBox[{"Max", "[", "test", "]"}]}], "]"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5190507262364693`*^9, 3.5190508888307695`*^9}, {
  3.519050976564787*^9, 3.519050977359833*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.18700000000005718`", ",", 
   RowBox[{"{", 
    RowBox[{"{", "709", "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.519050980038986*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 108", "Section",
 CellChangeTimes->{{3.5284807304829273`*^9, 3.528480732078018*^9}, {
   3.5284810149801993`*^9, 3.5284810183053894`*^9}, 3.5716146722546697`*^9}],

Cell[TextData[{
 "In the following equation x, y, and n are positive integers.\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "x"], "+", 
     FractionBox["1", "y"]}], "=", 
    FractionBox["1", "n"]}], TraditionalForm]]],
 "\nFor ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "4"}], TraditionalForm]]],
 " there are exactly three distinct solutions :\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "5"], "+", 
     FractionBox["1", "20"]}], "=", 
    FractionBox["1", "4"]}], TraditionalForm]]],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "6"], "+", 
     FractionBox["1", "12"]}], "=", 
    FractionBox["1", "4"]}], TraditionalForm]]],
 "\n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "8"], "+", 
     FractionBox["1", "8"]}], "=", 
    FractionBox["1", "4"]}], TraditionalForm]]],
 "\n\nWhat is the least value of n for which the number of distinct solutions \
exceeds one - thousand?\nNOTE : This problem is an easier version of problem \
110; it is strongly advised that you solve this one first."
}], "Text",
 CellChangeTimes->{{3.528480610119043*^9, 3.5284807056155047`*^9}, {
  3.5284807491919975`*^9, 3.5284807755545053`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.57161467819901*^9, 3.5716146790690594`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Catch", "[", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"Divisors", "[", 
             RowBox[{"n", "^", "2"}], "]"}], "]"}], "+", "1"}], ")"}], "/", 
         "2"}], ">", "1000"}], ",", 
       RowBox[{"Throw", "[", "n", "]"}], ",", "Continue"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "10000000"}], "}"}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.528480489491143*^9, 3.528480535839794*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"17.877000000000017`", ",", "180180"}], "}"}]], "Output",
 CellChangeTimes->{{3.5284805153156204`*^9, 3.528480555645927*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 205", "Section",
 CellChangeTimes->{{3.520093158380443*^9, 3.520093160391558*^9}, {
   3.520093191140317*^9, 3.5200931935314536`*^9}, 3.5716150077268577`*^9}],

Cell[TextData[{
 "Peter has nine four - sided (pyramidal) dice, each with faces numbered 1, \
2, 3, 4. Colin has six six - sided (cubic) dice, each with faces numbered 1, \
2, 3, 4, 5, 6.\n\nPeter and Colin roll their dice and compare totals : the \
highest total wins.The result is a draw if the totals are equal.What is the \
probability that Pyramidal Pete beats Cubic Colin?Give your answer rounded to \
seven decimal places in the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0.", "abcdefg"}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.5200360315903473`*^9, 3.5200360403018456`*^9}, {
  3.520093125859583*^9, 3.5200931378962717`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.520093101648198*^9, 3.520093104789378*^9}, {
  3.57161524868664*^9, 3.5716152488216476`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"prob", ",", " ", "pete", ",", " ", "colin"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"prob", "[", 
       RowBox[{"num_", ",", "list_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"Select", "[", 
         RowBox[{"list", ",", 
          RowBox[{
           RowBox[{"num", " ", "\[Equal]", " ", "#"}], "&"}]}], "]"}], "]"}], 
       "/", 
       RowBox[{"Length", "[", "list", "]"}]}]}], ";", " ", 
     RowBox[{"pete", " ", "=", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"{", 
           RowBox[{
           "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", 
            ",", "h", ",", "i"}], "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"d", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"e", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"f", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"g", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"h", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], ";", 
     RowBox[{"colin", " ", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f"}], 
           "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "1", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"b", ",", "1", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"d", ",", "1", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"e", ",", "1", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"f", ",", "1", ",", "6"}], "}"}]}], "]"}], "]"}]}], ";", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"prob", "[", 
            RowBox[{"n", ",", "pete"}], "]"}], "*", 
           RowBox[{"Total", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"prob", "[", 
               RowBox[{"i", ",", "colin"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "0", ",", 
                RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "9", ",", "36"}], "}"}]}], "]"}], "]"}], ",", 
       "7"}], "]"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5200928674998055`*^9, 3.5200929112213063`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"63.867000000000004`", ",", "0.5731440767829800829`7."}], 
  "}"}]], "Output",
 CellChangeTimes->{3.5200929806672783`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Problem 206", "Section",
 CellChangeTimes->{{3.519080942907764*^9, 3.51908094493888*^9}}],

Cell["\<\
Find the unique positive integer whose square has the form \
1_2_3_4_5_6_7_8_9_0, where each \[OpenCurlyDoubleQuote]_\
\[CloseCurlyDoubleQuote] is a single digit.\
\>", "Text",
 CellChangeTimes->{3.5190809641379786`*^9}],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.5716150214146404`*^9, 3.5716150222526884`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Catch", "[", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FromDigits", "[", 
         RowBox[{"Pick", "[", 
          RowBox[{
           RowBox[{"IntegerDigits", "[", 
            RowBox[{"i", "^", "2"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", 
             ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", 
             "0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", "1"}], "]"}], 
         "]"}], "==", " ", "123456789"}], ",", 
       RowBox[{"Throw", "[", 
        RowBox[{"i", "*", "10"}], "]"}], ",", "Continue"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "138902662", ",", "101010101", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5190804016978083`*^9, 3.5190804335666313`*^9}, {
  3.5190804661054926`*^9, 3.5190804866306667`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.01599999999977042`", ",", "1389019170"}], "}"}]], "Output",
 CellChangeTimes->{{3.5190804515016575`*^9, 3.519080470702756*^9}, 
   3.519080505410741*^9}]
}, Closed]]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{704, 643},
WindowMargins->{{Automatic, 21}, {Automatic, 0}},
PrintingPageRange->{Automatic, Automatic},
ShowSelection->True,
FrontEndVersion->"8.0 for Microsoft Windows (32-bit) (October 6, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 98, 1, 83, "Title"],
Cell[CellGroupData[{
Cell[702, 27, 124, 2, 71, "Section"],
Cell[829, 31, 254, 6, 83, "Text"],
Cell[CellGroupData[{
Cell[1108, 41, 98, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[1231, 46, 650, 18, 31, "Input"],
Cell[1884, 66, 221, 5, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[2166, 78, 98, 1, 41, "Section"],
Cell[2267, 81, 623, 12, 134, "Text"],
Cell[CellGroupData[{
Cell[2915, 97, 100, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[3040, 102, 1105, 28, 112, "Input"],
Cell[4148, 132, 325, 6, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[4534, 145, 96, 1, 41, "Section"],
Cell[4633, 148, 176, 5, 65, "Text"],
Cell[CellGroupData[{
Cell[4834, 157, 100, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[4959, 162, 260, 5, 31, "Input"],
Cell[5222, 169, 172, 4, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[5455, 180, 193, 3, 41, "Section"],
Cell[5651, 185, 277, 6, 83, "Text"],
Cell[CellGroupData[{
Cell[5953, 195, 124, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[6102, 201, 1627, 36, 92, "Input"],
Cell[7732, 239, 179, 4, 30, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[7960, 249, 110, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[8095, 254, 1372, 35, 72, "Input"],
Cell[9470, 291, 161, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[9692, 301, 95, 1, 41, "Section"],
Cell[9790, 304, 277, 7, 65, "Text"],
Cell[CellGroupData[{
Cell[10092, 315, 98, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[10215, 320, 442, 9, 31, "Input"],
Cell[10660, 331, 175, 4, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[10896, 342, 94, 1, 41, "Section"],
Cell[10993, 345, 1141, 30, 225, "Text"],
Cell[CellGroupData[{
Cell[12159, 379, 96, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[12280, 384, 806, 22, 52, "Input"],
Cell[13089, 408, 197, 4, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[13347, 419, 94, 1, 41, "Section"],
Cell[13444, 422, 203, 6, 65, "Text"],
Cell[CellGroupData[{
Cell[13672, 432, 98, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[13795, 437, 211, 4, 31, "Input"],
Cell[14009, 443, 173, 4, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[14243, 454, 170, 2, 41, "Section"],
Cell[14416, 458, 2111, 64, 442, "Text"],
Cell[CellGroupData[{
Cell[16552, 526, 126, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[16703, 532, 2686, 55, 452, "Input"],
Cell[19392, 589, 242, 4, 30, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[19683, 599, 116, 1, 36, "Subsection"],
Cell[19802, 602, 415, 7, 65, "Text"],
Cell[CellGroupData[{
Cell[20242, 613, 2288, 48, 452, "Input"],
Cell[22533, 663, 145, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[22739, 673, 95, 1, 41, "Section"],
Cell[22837, 676, 198, 5, 65, "Text"],
Cell[CellGroupData[{
Cell[23060, 685, 100, 1, 36, "Subsection"],
Cell[23163, 688, 11923, 251, 83, "WolframAlphaShortInput"],
Cell[CellGroupData[{
Cell[35111, 943, 315, 7, 31, "Input"],
Cell[35429, 952, 166, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[35656, 962, 94, 1, 41, "Section"],
Cell[35753, 965, 741, 13, 335, "Text"],
Cell[CellGroupData[{
Cell[36519, 982, 98, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[36642, 987, 1247, 32, 72, "Input"],
Cell[37892, 1021, 262, 5, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[38215, 1033, 95, 1, 41, "Section"],
Cell[38313, 1036, 5588, 104, 1947, "Text"],
Cell[CellGroupData[{
Cell[43926, 1144, 126, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[44077, 1150, 7910, 111, 2092, "Input"],
Cell[51990, 1263, 226, 6, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[52277, 1276, 217, 3, 41, "Section"],
Cell[52497, 1281, 1190, 35, 281, "Text"],
Cell[CellGroupData[{
Cell[53712, 1320, 96, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[53833, 1325, 1005, 29, 72, "Input"],
Cell[54841, 1356, 178, 5, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[55080, 1368, 99, 1, 41, "Section"],
Cell[55182, 1371, 313, 7, 65, "Text"],
Cell[CellGroupData[{
Cell[55520, 1382, 96, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[55641, 1387, 290, 6, 31, "Input"],
Cell[55934, 1395, 227, 4, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[56222, 1406, 96, 1, 41, "Section"],
Cell[56321, 1409, 435, 13, 65, "Text"],
Cell[CellGroupData[{
Cell[56781, 1426, 100, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[56906, 1431, 318, 7, 31, "Input"],
Cell[57227, 1440, 142, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[57430, 1450, 95, 1, 71, "Section"],
Cell[CellGroupData[{
Cell[57550, 1455, 269, 6, 29, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[57822, 1463, 159, 2, 23, "Item",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[57984, 1467, 321, 9, 103, "Item",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[58308, 1478, 250, 5, 23, "Item",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[58561, 1485, 250, 5, 29, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Closed]],
Cell[CellGroupData[{
Cell[58848, 1495, 97, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[58970, 1500, 961, 25, 72, "Input"],
Cell[59934, 1527, 159, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[60154, 1537, 95, 1, 71, "Section"],
Cell[60252, 1540, 1246, 44, 119, "Text"],
Cell[CellGroupData[{
Cell[61523, 1588, 98, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[61646, 1593, 289, 6, 31, "Input"],
Cell[61938, 1601, 173, 4, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[62172, 1612, 227, 3, 71, "Section"],
Cell[62402, 1617, 1533, 53, 155, "Text"],
Cell[CellGroupData[{
Cell[63960, 1674, 123, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[64108, 1680, 1196, 33, 92, "Input"],
Cell[65307, 1715, 510, 9, 21, "Message"],
Cell[65820, 1726, 163, 3, 30, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[66032, 1735, 118, 1, 36, "Subsection"],
Cell[66153, 1738, 241, 4, 47, "Text"],
Cell[CellGroupData[{
Cell[66419, 1746, 1157, 31, 72, "Input"],
Cell[67579, 1779, 165, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[67805, 1789, 97, 1, 71, "Section"],
Cell[67905, 1792, 736, 14, 155, "Text"],
Cell[CellGroupData[{
Cell[68666, 1810, 98, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[68789, 1815, 1613, 45, 192, "Input"],
Cell[70405, 1862, 164, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[70630, 1872, 97, 1, 71, "Section"],
Cell[70730, 1875, 523, 9, 137, "Text"],
Cell[CellGroupData[{
Cell[71278, 1888, 98, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[71401, 1893, 345, 9, 31, "Input"],
Cell[71749, 1904, 142, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[71952, 1914, 97, 1, 71, "Section"],
Cell[72052, 1917, 517, 24, 389, "Text"],
Cell[CellGroupData[{
Cell[72594, 1945, 97, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[72716, 1950, 523, 15, 72, "Input"],
Cell[73242, 1967, 136, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[73439, 1977, 99, 1, 71, "Section"],
Cell[73541, 1980, 595, 20, 299, "Text"],
Cell[CellGroupData[{
Cell[74161, 2004, 98, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[74284, 2009, 922, 28, 52, "Input"],
Cell[75209, 2039, 187, 5, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[75457, 2051, 173, 2, 71, "Section"],
Cell[75633, 2055, 2703, 91, 332, "Text"],
Cell[CellGroupData[{
Cell[78361, 2150, 124, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[78510, 2156, 1860, 45, 92, "Input"],
Cell[80373, 2203, 270, 7, 30, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[80692, 2216, 110, 1, 36, "Subsection"],
Cell[80805, 2219, 432, 7, 65, "Text"],
Cell[CellGroupData[{
Cell[81262, 2230, 2229, 59, 132, "Input"],
Cell[83494, 2291, 205, 5, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[83760, 2303, 168, 2, 71, "Section"],
Cell[83931, 2307, 2473, 78, 225, "Text"],
Cell[CellGroupData[{
Cell[86429, 2389, 122, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[86576, 2395, 743, 21, 72, "Input"],
Cell[87322, 2418, 159, 3, 30, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[87530, 2427, 116, 1, 36, "Subsection"],
Cell[87649, 2430, 433, 7, 65, "Text"],
Cell[CellGroupData[{
Cell[88107, 2441, 719, 17, 52, "Input"],
Cell[88829, 2460, 338, 6, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[89228, 2473, 171, 2, 71, "Section"],
Cell[89402, 2477, 1352, 39, 209, "Text"],
Cell[CellGroupData[{
Cell[90779, 2520, 126, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[90930, 2526, 794, 22, 72, "Input"],
Cell[91727, 2550, 189, 4, 30, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[91965, 2560, 145, 2, 36, "Subsection"],
Cell[92113, 2564, 254, 5, 47, "Text"],
Cell[CellGroupData[{
Cell[92392, 2573, 787, 21, 92, "Input"],
Cell[93182, 2596, 139, 3, 30, "Output"]
}, Closed]],
Cell[93336, 2602, 296, 5, 47, "Text"],
Cell[CellGroupData[{
Cell[93657, 2611, 602, 16, 92, "Input"],
Cell[94262, 2629, 188, 4, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[94511, 2640, 97, 1, 71, "Section"],
Cell[94611, 2643, 491, 12, 173, "Text"],
Cell[CellGroupData[{
Cell[95127, 2659, 100, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[95252, 2664, 379, 9, 31, "Input"],
Cell[95634, 2675, 138, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[95833, 2685, 97, 1, 71, "Section"],
Cell[95933, 2688, 640, 14, 173, "Text"],
Cell[CellGroupData[{
Cell[96598, 2706, 96, 1, 36, "Subsection"],
Cell[96697, 2709, 933, 24, 92, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[97667, 2738, 126, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[97818, 2744, 3010, 71, 172, "Input"],
Cell[100831, 2817, 128, 3, 30, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[101008, 2826, 106, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[101139, 2831, 3525, 90, 252, "Input"],
Cell[104667, 2923, 191, 4, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[104919, 2934, 201, 3, 71, "Section"],
Cell[105123, 2939, 843, 27, 101, "Text"],
Cell[CellGroupData[{
Cell[105991, 2970, 124, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[106140, 2976, 916, 24, 72, "Input"],
Cell[107059, 3002, 236, 4, 30, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[107344, 3012, 112, 1, 36, "Subsection"],
Cell[107459, 3015, 170, 3, 29, "Text"],
Cell[CellGroupData[{
Cell[107654, 3022, 629, 17, 92, "Input"],
Cell[108286, 3041, 139, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[108486, 3051, 97, 1, 71, "Section"],
Cell[108586, 3054, 369, 9, 101, "Text"],
Cell[CellGroupData[{
Cell[108980, 3067, 98, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[109103, 3072, 2117, 51, 252, "Input"],
Cell[111223, 3125, 313, 5, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[111597, 3137, 95, 1, 71, "Section"],
Cell[111695, 3140, 665, 17, 83, "Text"],
Cell[CellGroupData[{
Cell[112385, 3161, 96, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[112506, 3166, 1528, 37, 132, "Input"],
Cell[114037, 3205, 314, 5, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[114412, 3217, 96, 1, 71, "Section"],
Cell[114511, 3220, 494, 11, 119, "Text"],
Cell[CellGroupData[{
Cell[115030, 3235, 95, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[115150, 3240, 2756, 64, 172, "Input"],
Cell[117909, 3306, 140, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[118110, 3316, 99, 1, 71, "Section"],
Cell[118212, 3319, 1108, 27, 263, "Text"],
Cell[CellGroupData[{
Cell[119345, 3350, 149, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[119519, 3356, 2940, 74, 252, "Input"],
Cell[122462, 3432, 264, 5, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[122787, 3444, 96, 1, 71, "Section"],
Cell[122886, 3447, 304, 8, 119, "Text"],
Cell[CellGroupData[{
Cell[123215, 3459, 98, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[123338, 3464, 2894, 82, 172, "Input"],
Cell[126235, 3548, 123, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[126419, 3558, 97, 1, 71, "Section"],
Cell[126519, 3561, 533, 10, 174, "Text"],
Cell[CellGroupData[{
Cell[127077, 3575, 96, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[127198, 3580, 1145, 32, 72, "Input"],
Cell[128346, 3614, 135, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[128542, 3624, 173, 2, 71, "Section"],
Cell[128718, 3628, 941, 16, 191, "Text"],
Cell[CellGroupData[{
Cell[129684, 3648, 96, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[129805, 3653, 1987, 54, 192, "Input"],
Cell[131795, 3709, 136, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[131992, 3719, 173, 2, 71, "Section"],
Cell[132168, 3723, 1491, 49, 155, "Text"],
Cell[CellGroupData[{
Cell[133684, 3776, 107, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[133816, 3781, 1923, 54, 132, "Input"],
Cell[135742, 3837, 246, 6, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[136049, 3850, 95, 1, 71, "Section"],
Cell[136147, 3853, 1450, 49, 281, "Text"],
Cell[CellGroupData[{
Cell[137622, 3906, 148, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[137795, 3912, 796, 24, 52, "Input"],
Cell[138594, 3938, 207, 5, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[138862, 3950, 99, 1, 71, "Section"],
Cell[138964, 3953, 1220, 37, 157, "Text"],
Cell[CellGroupData[{
Cell[140209, 3994, 98, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[140332, 3999, 1492, 41, 127, "Input"],
Cell[141827, 4042, 161, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[142049, 4052, 95, 1, 41, "Section"],
Cell[142147, 4055, 774, 26, 65, "Text"],
Cell[CellGroupData[{
Cell[142946, 4085, 98, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[143069, 4090, 592, 15, 31, "Input"],
Cell[143664, 4107, 146, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[143871, 4117, 97, 1, 41, "Section"],
Cell[143971, 4120, 540, 11, 137, "Text"],
Cell[CellGroupData[{
Cell[144536, 4135, 98, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[144659, 4140, 2467, 66, 252, "Input"],
Cell[147129, 4208, 148, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[147338, 4218, 99, 1, 41, "Section"],
Cell[147440, 4221, 316, 7, 65, "Text"],
Cell[CellGroupData[{
Cell[147781, 4232, 105, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[147911, 4237, 1693, 48, 112, "Input"],
Cell[149607, 4287, 138, 3, 30, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[149794, 4296, 108, 1, 36, "Subsection"],
Cell[149905, 4299, 940, 16, 137, "Text"],
Cell[CellGroupData[{
Cell[150870, 4319, 2263, 59, 192, "Input"],
Cell[153136, 4380, 137, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[153334, 4390, 199, 3, 41, "Section"],
Cell[153536, 4395, 1382, 44, 202, "Text"],
Cell[CellGroupData[{
Cell[154943, 4443, 98, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[155066, 4448, 843, 23, 72, "Input"],
Cell[155912, 4473, 161, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[156134, 4483, 97, 1, 41, "Section"],
Cell[156234, 4486, 761, 23, 85, "Text"],
Cell[CellGroupData[{
Cell[157020, 4513, 98, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[157143, 4518, 465, 13, 31, "Input"],
Cell[157611, 4533, 162, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[157834, 4543, 97, 1, 41, "Section"],
Cell[157934, 4546, 555, 16, 83, "Text"],
Cell[CellGroupData[{
Cell[158514, 4566, 98, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[158637, 4571, 868, 21, 112, "Input"],
Cell[159508, 4594, 342, 6, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[159911, 4607, 96, 1, 41, "Section"],
Cell[160010, 4610, 4029, 130, 710, "Text"],
Cell[CellGroupData[{
Cell[164064, 4744, 100, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[164189, 4749, 767, 20, 112, "Input"],
Cell[164959, 4771, 145, 3, 30, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[165153, 4780, 108, 1, 36, "Subsection"],
Cell[165264, 4783, 493, 8, 83, "Text"],
Cell[CellGroupData[{
Cell[165782, 4795, 441, 12, 31, "Input"],
Cell[166226, 4809, 147, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[166434, 4819, 122, 2, 41, "Section"],
Cell[166559, 4823, 2768, 97, 300, "Text"],
Cell[CellGroupData[{
Cell[169352, 4924, 100, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[169477, 4929, 1630, 46, 132, "Input"],
Cell[171110, 4977, 263, 7, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[171434, 4991, 173, 2, 41, "Section"],
Cell[171610, 4995, 810, 22, 335, "Text"],
Cell[CellGroupData[{
Cell[172445, 5021, 151, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[172621, 5027, 583, 16, 52, "Input"],
Cell[173207, 5045, 189, 5, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[173457, 5057, 175, 2, 41, "Section"],
Cell[173635, 5061, 868, 16, 173, "Text"],
Cell[CellGroupData[{
Cell[174528, 5081, 122, 2, 36, "Subsection"],
Cell[174653, 5085, 673, 10, 101, "Text"],
Cell[175329, 5097, 378, 9, 52, "Input"],
Cell[CellGroupData[{
Cell[175732, 5110, 703, 19, 72, "Input"],
Cell[176438, 5131, 209, 4, 30, "Output"]
}, Closed]],
Cell[176662, 5138, 304, 7, 31, "Input"],
Cell[176969, 5147, 414, 11, 31, "Input"],
Cell[CellGroupData[{
Cell[177408, 5162, 244, 5, 31, "Input"],
Cell[177655, 5169, 192, 4, 30, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[177884, 5178, 177, 4, 31, "Input"],
Cell[178064, 5184, 102, 1, 30, "Output"]
}, Closed]],
Cell[178181, 5188, 228, 4, 31, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[178458, 5198, 99, 1, 41, "Section"],
Cell[178560, 5201, 860, 22, 119, "Text"],
Cell[CellGroupData[{
Cell[179445, 5227, 100, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[179570, 5232, 413, 11, 31, "Input"],
Cell[179986, 5245, 142, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[180189, 5255, 97, 1, 41, "Section"],
Cell[180289, 5258, 1375, 36, 155, "Text"],
Cell[CellGroupData[{
Cell[181689, 5298, 100, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[181814, 5303, 1355, 36, 132, "Input"],
Cell[183172, 5341, 185, 5, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[183418, 5353, 176, 2, 41, "Section"],
Cell[183597, 5357, 1275, 42, 215, "Text"],
Cell[CellGroupData[{
Cell[184897, 5403, 97, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[185019, 5408, 650, 19, 52, "Input"],
Cell[185672, 5429, 164, 3, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[185897, 5439, 172, 2, 41, "Section"],
Cell[186072, 5443, 684, 13, 116, "Text"],
Cell[CellGroupData[{
Cell[186781, 5460, 146, 2, 36, "Subsection"],
Cell[CellGroupData[{
Cell[186952, 5466, 3174, 84, 192, "Input"],
Cell[190129, 5552, 161, 4, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[190351, 5563, 95, 1, 41, "Section"],
Cell[190449, 5566, 230, 5, 29, "Text"],
Cell[CellGroupData[{
Cell[190704, 5575, 100, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[190829, 5580, 1036, 25, 152, "Input"],
Cell[191868, 5607, 195, 4, 30, "Output"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
